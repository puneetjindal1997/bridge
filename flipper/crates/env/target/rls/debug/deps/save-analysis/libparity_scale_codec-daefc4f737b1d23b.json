{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2","program":"/home/user/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","parity_scale_codec","--edition=2021","/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bitvec\"","--cfg","feature=\"chain-error\"","--cfg","feature=\"derive\"","--cfg","feature=\"full\"","--cfg","feature=\"parity-scale-codec-derive\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","-C","metadata=daefc4f737b1d23b","-C","extra-filename=-daefc4f737b1d23b","--out-dir","/data/bridge/flipper/crates/env/target/rls/debug/deps","-L","dependency=/data/bridge/flipper/crates/env/target/rls/debug/deps","--extern","arrayvec=/data/bridge/flipper/crates/env/target/rls/debug/deps/libarrayvec-7f9d68318296f4ee.rmeta","--extern","bitvec=/data/bridge/flipper/crates/env/target/rls/debug/deps/libbitvec-c0815ed01ff471a1.rmeta","--extern","byte_slice_cast=/data/bridge/flipper/crates/env/target/rls/debug/deps/libbyte_slice_cast-7e08a97d83a2e07c.rmeta","--extern","impl_trait_for_tuples=/data/bridge/flipper/crates/env/target/rls/debug/deps/libimpl_trait_for_tuples-23e1baeade1e80b4.so","--extern","parity_scale_codec_derive=/data/bridge/flipper/crates/env/target/rls/debug/deps/libparity_scale_codec_derive-c07881f23bb4d453.so","--extern","serde=/data/bridge/flipper/crates/env/target/rls/debug/deps/libserde-6dfdae88ad460b27.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/user/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/data/bridge/flipper/crates/env/target/rls/debug/deps/libparity_scale_codec-daefc4f737b1d23b.rmeta"},"prelude":{"crate_id":{"name":"parity_scale_codec","disambiguator":[1894304188854438066,0]},"crate_root":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src","external_crates":[{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","num":2,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","num":20,"id":{"name":"parity_scale_codec_derive","disambiguator":[7055540601628545636,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","num":21,"id":{"name":"byte_slice_cast","disambiguator":[9733089393729035916,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","num":22,"id":{"name":"arrayvec","disambiguator":[17570390050859790690,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","num":23,"id":{"name":"serde","disambiguator":[373097084773058157,0]}},{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","num":24,"id":{"name":"serde_derive","disambiguator":[3938953606297691061,0]}}],"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":602,"byte_end":11824,"line_start":15,"line_end":347,"column_start":1,"column_end":50}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9252,"byte_end":9253,"line_start":257,"line_end":257,"column_start":36,"column_end":37},"alias_span":null,"name":"*","value":"Decode, Encode","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":191},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9325,"byte_end":9330,"line_start":262,"line_end":262,"column_start":15,"column_end":20},"alias_span":null,"name":"boxed","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":6303},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9346,"byte_end":9349,"line_start":263,"line_end":263,"column_start":15,"column_end":18},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":5},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9346,"byte_end":9349,"line_start":263,"line_end":263,"column_start":15,"column_end":18},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":5446},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9365,"byte_end":9371,"line_start":264,"line_end":264,"column_start":15,"column_end":21},"alias_span":null,"name":"string","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":624},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9387,"byte_end":9393,"line_start":265,"line_end":265,"column_start":15,"column_end":21},"alias_span":null,"name":"borrow","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":1,"index":1099},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9409,"byte_end":9420,"line_start":266,"line_end":266,"column_start":15,"column_end":26},"alias_span":null,"name":"collections","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":1,"index":7806},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9436,"byte_end":9440,"line_start":267,"line_end":267,"column_start":15,"column_end":19},"alias_span":null,"name":"sync","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":4526},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9456,"byte_end":9458,"line_start":268,"line_end":268,"column_start":15,"column_end":17},"alias_span":null,"name":"rc","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":2546},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9766,"byte_end":9771,"line_start":287,"line_end":287,"column_start":22,"column_end":27},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":159},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9797,"byte_end":9802,"line_start":289,"line_end":289,"column_start":2,"column_end":7},"alias_span":null,"name":"Input","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9804,"byte_end":9810,"line_start":289,"line_end":289,"column_start":9,"column_end":15},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":227},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9812,"byte_end":9818,"line_start":289,"line_end":289,"column_start":17,"column_end":23},"alias_span":null,"name":"Decode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9820,"byte_end":9826,"line_start":289,"line_end":289,"column_start":25,"column_end":31},"alias_span":null,"name":"Encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":235},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9828,"byte_end":9833,"line_start":289,"line_end":289,"column_start":33,"column_end":38},"alias_span":null,"name":"Codec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":334},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9835,"byte_end":9846,"line_start":289,"line_end":289,"column_start":40,"column_end":51},"alias_span":null,"name":"EncodeAsRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":244},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9848,"byte_end":9865,"line_start":289,"line_end":289,"column_start":53,"column_end":70},"alias_span":null,"name":"WrapperTypeEncode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":317},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9867,"byte_end":9884,"line_start":289,"line_end":289,"column_start":72,"column_end":89},"alias_span":null,"name":"WrapperTypeDecode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1038},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9887,"byte_end":9897,"line_start":290,"line_end":290,"column_start":2,"column_end":12},"alias_span":null,"name":"OptionBool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1039},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9887,"byte_end":9897,"line_start":290,"line_end":290,"column_start":2,"column_end":12},"alias_span":null,"name":"OptionBool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":225},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9899,"byte_end":9911,"line_start":290,"line_end":290,"column_start":14,"column_end":26},"alias_span":null,"name":"DecodeLength","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":241},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9913,"byte_end":9922,"line_start":290,"line_end":290,"column_start":28,"column_end":37},"alias_span":null,"name":"FullCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":238},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9924,"byte_end":9934,"line_start":290,"line_end":290,"column_start":39,"column_end":49},"alias_span":null,"name":"FullEncode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9984,"byte_end":9992,"line_start":293,"line_end":293,"column_start":22,"column_end":30},"alias_span":null,"name":"IoReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":173},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9984,"byte_end":9992,"line_start":293,"line_end":293,"column_start":22,"column_end":30},"alias_span":null,"name":"IoReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2481},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":10018,"byte_end":10025,"line_start":294,"line_end":294,"column_start":25,"column_end":32},"alias_span":null,"name":"Compact","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2482},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":10018,"byte_end":10025,"line_start":294,"line_end":294,"column_start":25,"column_end":32},"alias_span":null,"name":"Compact","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":667},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":10027,"byte_end":10037,"line_start":294,"line_end":294,"column_start":34,"column_end":44},"alias_span":null,"name":"HasCompact","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":614},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":10039,"byte_end":10048,"line_start":294,"line_end":294,"column_start":46,"column_end":55},"alias_span":null,"name":"CompactAs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":604},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":10050,"byte_end":10060,"line_start":294,"line_end":294,"column_start":57,"column_end":67},"alias_span":null,"name":"CompactLen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2519},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":10062,"byte_end":10072,"line_start":294,"line_end":294,"column_start":69,"column_end":79},"alias_span":null,"name":"CompactRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2520},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":10062,"byte_end":10072,"line_start":294,"line_end":294,"column_start":69,"column_end":79},"alias_span":null,"name":"CompactRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":771},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":10097,"byte_end":10103,"line_start":295,"line_end":295,"column_start":23,"column_end":29},"alias_span":null,"name":"Joiner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":790},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":10129,"byte_end":10137,"line_start":296,"line_end":296,"column_start":25,"column_end":33},"alias_span":null,"name":"KeyedVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":805},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":10165,"byte_end":10174,"line_start":297,"line_end":297,"column_start":27,"column_end":36},"alias_span":null,"name":"DecodeAll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":822},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":10203,"byte_end":10214,"line_start":298,"line_end":298,"column_start":28,"column_end":39},"alias_span":null,"name":"DecodeLimit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":876},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":10245,"byte_end":10257,"line_start":299,"line_end":299,"column_start":30,"column_end":42},"alias_span":null,"name":"EncodeAppend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":907},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":10287,"byte_end":10297,"line_start":300,"line_end":300,"column_start":29,"column_end":39},"alias_span":null,"name":"EncodeLike","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":909},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":10299,"byte_end":10302,"line_start":300,"line_end":300,"column_start":41,"column_end":44},"alias_span":null,"name":"Ref","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":602,"byte_end":11824,"line_start":15,"line_end":347,"column_start":1,"column_end":50},"name":"","qualname":"::","value":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":27},{"krate":0,"index":557},{"krate":0,"index":764},{"krate":0,"index":780},{"krate":0,"index":796},{"krate":0,"index":810},{"krate":0,"index":845},{"krate":0,"index":903},{"krate":0,"index":939},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1035}],"decl_id":null,"docs":" # Parity SCALE Codec","sig":null,"attributes":[{"value":"/ # Parity SCALE Codec","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":602,"byte_end":626,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":627,"byte_end":630,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Rust implementation of the SCALE (Simple Concatenated Aggregate Little-Endian) data format","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":631,"byte_end":725,"line_start":17,"line_end":17,"column_start":1,"column_end":95}},{"value":"/ for types used in the Parity Substrate framework.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":726,"byte_end":779,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":780,"byte_end":783,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ SCALE is a light-weight format which allows encoding (and decoding) which makes it highly","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":784,"byte_end":877,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/ suitable for resource-constrained execution environments like blockchain runtimes and low-power,","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":878,"byte_end":978,"line_start":21,"line_end":21,"column_start":1,"column_end":101}},{"value":"/ low-memory devices.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":979,"byte_end":1002,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1003,"byte_end":1006,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ It is important to note that the encoding context (knowledge of how the types and data","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1007,"byte_end":1097,"line_start":24,"line_end":24,"column_start":1,"column_end":91}},{"value":"/ structures look) needs to be known separately at both encoding and decoding ends.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1098,"byte_end":1183,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ The encoded data does not include this contextual information.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1184,"byte_end":1250,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1251,"byte_end":1254,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ To get a better understanding of how the encoding is done for different types,","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1255,"byte_end":1337,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ take a look at the","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1338,"byte_end":1360,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/ [SCALE Code page at the Substrate Knowledge Base](https://docs.substrate.io/v3/advanced/scale-codec/).","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1361,"byte_end":1467,"line_start":30,"line_end":30,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1468,"byte_end":1471,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Implementation","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1472,"byte_end":1493,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1494,"byte_end":1497,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The codec is implemented using the following traits:","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1498,"byte_end":1554,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1555,"byte_end":1558,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ### Encode","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1559,"byte_end":1573,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1574,"byte_end":1577,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The `Encode` trait is used for encoding of data into the SCALE format. The `Encode` trait","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1578,"byte_end":1671,"line_start":38,"line_end":38,"column_start":1,"column_end":94}},{"value":"/ contains the following functions:","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1672,"byte_end":1709,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1711,"byte_end":1714,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ * `size_hint(&self) -> usize`: Gets the capacity (in bytes) required for the encoded data.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1715,"byte_end":1809,"line_start":42,"line_end":42,"column_start":1,"column_end":95}},{"value":"/ This is to avoid double-allocation of memory needed for the encoding.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1810,"byte_end":1883,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ It can be an estimate and does not need to be an exact number.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1884,"byte_end":1950,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/ If the size is not known, even no good maximum, then we can skip this function from the trait","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":1951,"byte_end":2048,"line_start":45,"line_end":45,"column_start":1,"column_end":98}},{"value":"/ implementation. This is required to be a cheap operation, so should not involve iterations etc.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":2049,"byte_end":2148,"line_start":46,"line_end":46,"column_start":1,"column_end":100}},{"value":"/ * `encode_to<T: Output>(&self, dest: &mut T)`: Encodes the value and appends it to a destination","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":2149,"byte_end":2249,"line_start":47,"line_end":47,"column_start":1,"column_end":101}},{"value":"/   buffer.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":2250,"byte_end":2263,"line_start":48,"line_end":48,"column_start":1,"column_end":14}},{"value":"/ * `encode(&self) -> Vec<u8>`: Encodes the type data and returns a slice.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":2264,"byte_end":2340,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ * `using_encoded<R, F: FnOnce(&[u8]) -> R>(&self, f: F) -> R`: Encodes the type data and","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":2341,"byte_end":2433,"line_start":50,"line_end":50,"column_start":1,"column_end":93}},{"value":"/   executes a closure on the encoded value.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":2434,"byte_end":2480,"line_start":51,"line_end":51,"column_start":1,"column_end":47}},{"value":"/ Returns the result from the executed closure.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":2481,"byte_end":2530,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":2531,"byte_end":2534,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ **Note:** Implementations should override `using_encoded` for value types and `encode_to` for","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":2535,"byte_end":2632,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ allocating types. `size_hint` should be implemented for all types, wherever possible. Wrapper","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":2633,"byte_end":2730,"line_start":55,"line_end":55,"column_start":1,"column_end":98}},{"value":"/ types should override all methods.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":2731,"byte_end":2769,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":2770,"byte_end":2773,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ### Decode","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":2774,"byte_end":2788,"line_start":58,"line_end":58,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":2789,"byte_end":2792,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The `Decode` trait is used for deserialization/decoding of encoded data into the respective","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":2793,"byte_end":2888,"line_start":60,"line_end":60,"column_start":1,"column_end":96}},{"value":"/ types.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":2889,"byte_end":2899,"line_start":61,"line_end":61,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":2900,"byte_end":2903,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ * `fn decode<I: Input>(value: &mut I) -> Result<Self, Error>`: Tries to decode the value from","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":2904,"byte_end":3001,"line_start":63,"line_end":63,"column_start":1,"column_end":98}},{"value":"/   SCALE format to the type it is called on.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3002,"byte_end":3049,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/ Returns an `Err` if the decoding fails.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3050,"byte_end":3093,"line_start":65,"line_end":65,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3094,"byte_end":3097,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ### CompactAs","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3098,"byte_end":3115,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3116,"byte_end":3119,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The `CompactAs` trait is used for wrapping custom types/structs as compact types, which makes","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3120,"byte_end":3217,"line_start":69,"line_end":69,"column_start":1,"column_end":98}},{"value":"/ them even more space/memory efficient. The compact encoding is described [here](https://docs.substrate.io/v3/advanced/scale-codec/#compactgeneral-integers).","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3218,"byte_end":3378,"line_start":70,"line_end":70,"column_start":1,"column_end":161}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3379,"byte_end":3382,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ * `encode_as(&self) -> &Self::As`: Encodes the type (self) as a compact type.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3383,"byte_end":3464,"line_start":72,"line_end":72,"column_start":1,"column_end":82}},{"value":"/ The type `As` is defined in the same trait and its implementation should be compact encode-able.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3465,"byte_end":3565,"line_start":73,"line_end":73,"column_start":1,"column_end":101}},{"value":"/ * `decode_from(_: Self::As) -> Result<Self, Error>`: Decodes the type (self) from a compact","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3566,"byte_end":3661,"line_start":74,"line_end":74,"column_start":1,"column_end":96}},{"value":"/   encode-able type.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3662,"byte_end":3685,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3686,"byte_end":3689,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### HasCompact","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3690,"byte_end":3708,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3709,"byte_end":3712,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ The `HasCompact` trait, if implemented, tells that the corresponding type is a compact","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3713,"byte_end":3803,"line_start":79,"line_end":79,"column_start":1,"column_end":91}},{"value":"/ encode-able type.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3804,"byte_end":3825,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3826,"byte_end":3829,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ### EncodeLike","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3830,"byte_end":3848,"line_start":82,"line_end":82,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3849,"byte_end":3852,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ The `EncodeLike` trait needs to be implemented for each type manually. When using derive, it is","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3853,"byte_end":3952,"line_start":84,"line_end":84,"column_start":1,"column_end":100}},{"value":"/ done automatically for you. Basically the trait gives you the opportunity to accept multiple","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":3953,"byte_end":4049,"line_start":85,"line_end":85,"column_start":1,"column_end":97}},{"value":"/ types to a function that all encode to the same representation.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4050,"byte_end":4117,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4118,"byte_end":4121,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ## Usage Examples","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4122,"byte_end":4143,"line_start":88,"line_end":88,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4144,"byte_end":4147,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Following are some examples to demonstrate usage of the codec.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4148,"byte_end":4214,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4215,"byte_end":4218,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ### Simple types","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4219,"byte_end":4239,"line_start":92,"line_end":92,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4240,"byte_end":4243,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4244,"byte_end":4251,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/ # // Import macros if derive feature is not used.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4252,"byte_end":4305,"line_start":95,"line_end":95,"column_start":1,"column_end":54}},{"value":"/ # #[cfg(not(feature=\"derive\"))]","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4306,"byte_end":4341,"line_start":96,"line_end":96,"column_start":1,"column_end":36}},{"value":"/ # use parity_scale_codec_derive::{Encode, Decode};","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4342,"byte_end":4396,"line_start":97,"line_end":97,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4397,"byte_end":4400,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ use parity_scale_codec::{Encode, Decode};","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4401,"byte_end":4446,"line_start":99,"line_end":99,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4447,"byte_end":4450,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq, Encode, Decode)]","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4451,"byte_end":4498,"line_start":101,"line_end":101,"column_start":1,"column_end":48}},{"value":"/ enum EnumType {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4499,"byte_end":4518,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/ \t#[codec(index = 15)]","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4519,"byte_end":4544,"line_start":103,"line_end":103,"column_start":1,"column_end":26}},{"value":"/ \tA,","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4545,"byte_end":4552,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ \tB(u32, u64),","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4553,"byte_end":4570,"line_start":105,"line_end":105,"column_start":1,"column_end":18}},{"value":"/ \tC {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4571,"byte_end":4579,"line_start":106,"line_end":106,"column_start":1,"column_end":9}},{"value":"/ \t\ta: u32,","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4580,"byte_end":4593,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/ \t\tb: u64,","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4594,"byte_end":4607,"line_start":108,"line_end":108,"column_start":1,"column_end":14}},{"value":"/ \t},","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4608,"byte_end":4615,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4616,"byte_end":4621,"line_start":110,"line_end":110,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4622,"byte_end":4625,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ let a = EnumType::A;","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4626,"byte_end":4650,"line_start":112,"line_end":112,"column_start":1,"column_end":25}},{"value":"/ let b = EnumType::B(1, 2);","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4651,"byte_end":4681,"line_start":113,"line_end":113,"column_start":1,"column_end":31}},{"value":"/ let c = EnumType::C { a: 1, b: 2 };","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4682,"byte_end":4721,"line_start":114,"line_end":114,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4722,"byte_end":4725,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ a.using_encoded(|ref slice| {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4726,"byte_end":4759,"line_start":116,"line_end":116,"column_start":1,"column_end":34}},{"value":"/     assert_eq!(slice, &b\"\\x0f\");","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4760,"byte_end":4796,"line_start":117,"line_end":117,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4797,"byte_end":4804,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4805,"byte_end":4808,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ b.using_encoded(|ref slice| {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4809,"byte_end":4842,"line_start":120,"line_end":120,"column_start":1,"column_end":34}},{"value":"/     assert_eq!(slice, &b\"\\x01\\x01\\0\\0\\0\\x02\\0\\0\\0\\0\\0\\0\\0\");","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4843,"byte_end":4907,"line_start":121,"line_end":121,"column_start":1,"column_end":65}},{"value":"/ });","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4908,"byte_end":4915,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4916,"byte_end":4919,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ c.using_encoded(|ref slice| {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4920,"byte_end":4953,"line_start":124,"line_end":124,"column_start":1,"column_end":34}},{"value":"/     assert_eq!(slice, &b\"\\x02\\x01\\0\\0\\0\\x02\\0\\0\\0\\0\\0\\0\\0\");","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":4954,"byte_end":5018,"line_start":125,"line_end":125,"column_start":1,"column_end":65}},{"value":"/ });","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5019,"byte_end":5026,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5027,"byte_end":5030,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let mut da: &[u8] = b\"\\x0f\";","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5031,"byte_end":5063,"line_start":128,"line_end":128,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(EnumType::decode(&mut da).ok(), Some(a));","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5064,"byte_end":5120,"line_start":129,"line_end":129,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5121,"byte_end":5124,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ let mut db: &[u8] = b\"\\x01\\x01\\0\\0\\0\\x02\\0\\0\\0\\0\\0\\0\\0\";","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5125,"byte_end":5185,"line_start":131,"line_end":131,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(EnumType::decode(&mut db).ok(), Some(b));","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5186,"byte_end":5242,"line_start":132,"line_end":132,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5243,"byte_end":5246,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ let mut dc: &[u8] = b\"\\x02\\x01\\0\\0\\0\\x02\\0\\0\\0\\0\\0\\0\\0\";","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5247,"byte_end":5307,"line_start":134,"line_end":134,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(EnumType::decode(&mut dc).ok(), Some(c));","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5308,"byte_end":5364,"line_start":135,"line_end":135,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5365,"byte_end":5368,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ let mut dz: &[u8] = &[0];","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5369,"byte_end":5398,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(EnumType::decode(&mut dz).ok(), None);","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5399,"byte_end":5452,"line_start":138,"line_end":138,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5453,"byte_end":5456,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # fn main() { }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5457,"byte_end":5476,"line_start":140,"line_end":140,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5477,"byte_end":5484,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5485,"byte_end":5488,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ### Compact type with HasCompact","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5489,"byte_end":5525,"line_start":143,"line_end":143,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5526,"byte_end":5529,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5530,"byte_end":5537,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ # // Import macros if derive feature is not used.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5538,"byte_end":5591,"line_start":146,"line_end":146,"column_start":1,"column_end":54}},{"value":"/ # #[cfg(not(feature=\"derive\"))]","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5592,"byte_end":5627,"line_start":147,"line_end":147,"column_start":1,"column_end":36}},{"value":"/ # use parity_scale_codec_derive::{Encode, Decode};","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5628,"byte_end":5682,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5683,"byte_end":5686,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ use parity_scale_codec::{Encode, Decode, Compact, HasCompact};","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5687,"byte_end":5753,"line_start":150,"line_end":150,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5754,"byte_end":5757,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq, Encode, Decode)]","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5758,"byte_end":5805,"line_start":152,"line_end":152,"column_start":1,"column_end":48}},{"value":"/ struct Test1CompactHasCompact<T: HasCompact> {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5806,"byte_end":5856,"line_start":153,"line_end":153,"column_start":1,"column_end":51}},{"value":"/     #[codec(compact)]","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5857,"byte_end":5882,"line_start":154,"line_end":154,"column_start":1,"column_end":26}},{"value":"/     bar: T,","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5883,"byte_end":5898,"line_start":155,"line_end":155,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5899,"byte_end":5904,"line_start":156,"line_end":156,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5905,"byte_end":5908,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq, Encode, Decode)]","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5909,"byte_end":5956,"line_start":158,"line_end":158,"column_start":1,"column_end":48}},{"value":"/ struct Test1HasCompact<T: HasCompact> {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":5957,"byte_end":6000,"line_start":159,"line_end":159,"column_start":1,"column_end":44}},{"value":"/     #[codec(encoded_as = \"<T as HasCompact>::Type\")]","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6001,"byte_end":6057,"line_start":160,"line_end":160,"column_start":1,"column_end":57}},{"value":"/     bar: T,","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6058,"byte_end":6073,"line_start":161,"line_end":161,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6074,"byte_end":6079,"line_start":162,"line_end":162,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6080,"byte_end":6083,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let test_val: (u64, usize) = (0u64, 1usize);","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6084,"byte_end":6132,"line_start":164,"line_end":164,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6133,"byte_end":6136,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ let encoded = Test1HasCompact { bar: test_val.0 }.encode();","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6137,"byte_end":6200,"line_start":166,"line_end":166,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(encoded.len(), test_val.1);","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6201,"byte_end":6243,"line_start":167,"line_end":167,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(<Test1CompactHasCompact<u64>>::decode(&mut &encoded[..]).unwrap().bar, test_val.0);","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6244,"byte_end":6342,"line_start":168,"line_end":168,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6343,"byte_end":6346,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ # fn main() { }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6347,"byte_end":6366,"line_start":170,"line_end":170,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6367,"byte_end":6374,"line_start":171,"line_end":171,"column_start":1,"column_end":8}},{"value":"/ ### Type with CompactAs","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6375,"byte_end":6402,"line_start":172,"line_end":172,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6403,"byte_end":6406,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6407,"byte_end":6418,"line_start":174,"line_end":174,"column_start":1,"column_end":12}},{"value":"/ # // Import macros if derive feature is not used.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6419,"byte_end":6472,"line_start":175,"line_end":175,"column_start":1,"column_end":54}},{"value":"/ # #[cfg(not(feature=\"derive\"))]","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6473,"byte_end":6508,"line_start":176,"line_end":176,"column_start":1,"column_end":36}},{"value":"/ # use parity_scale_codec_derive::{Encode, Decode};","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6509,"byte_end":6563,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6564,"byte_end":6567,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ use serde_derive::{Serialize, Deserialize};","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6568,"byte_end":6615,"line_start":179,"line_end":179,"column_start":1,"column_end":48}},{"value":"/ use parity_scale_codec::{Encode, Decode, Compact, HasCompact, CompactAs, Error};","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6616,"byte_end":6700,"line_start":180,"line_end":180,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6701,"byte_end":6704,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ #[cfg_attr(feature = \"std\", derive(Serialize, Deserialize, Debug))]","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6705,"byte_end":6776,"line_start":182,"line_end":182,"column_start":1,"column_end":72}},{"value":"/ #[derive(PartialEq, Eq, Clone)]","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6777,"byte_end":6812,"line_start":183,"line_end":183,"column_start":1,"column_end":36}},{"value":"/ struct StructHasCompact(u32);","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6813,"byte_end":6846,"line_start":184,"line_end":184,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6847,"byte_end":6850,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ impl CompactAs for StructHasCompact {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6851,"byte_end":6892,"line_start":186,"line_end":186,"column_start":1,"column_end":42}},{"value":"/     type As = u32;","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6893,"byte_end":6915,"line_start":187,"line_end":187,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6916,"byte_end":6919,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/     fn encode_as(&self) -> &Self::As {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6920,"byte_end":6962,"line_start":189,"line_end":189,"column_start":1,"column_end":43}},{"value":"/         &12","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6963,"byte_end":6978,"line_start":190,"line_end":190,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6979,"byte_end":6988,"line_start":191,"line_end":191,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6989,"byte_end":6992,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/     fn decode_from(_: Self::As) -> Result<Self, Error> {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":6993,"byte_end":7053,"line_start":193,"line_end":193,"column_start":1,"column_end":61}},{"value":"/         Ok(StructHasCompact(12))","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7054,"byte_end":7090,"line_start":194,"line_end":194,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7091,"byte_end":7100,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7101,"byte_end":7106,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7107,"byte_end":7110,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ impl From<Compact<StructHasCompact>> for StructHasCompact {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7111,"byte_end":7174,"line_start":198,"line_end":198,"column_start":1,"column_end":64}},{"value":"/     fn from(_: Compact<StructHasCompact>) -> Self {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7175,"byte_end":7230,"line_start":199,"line_end":199,"column_start":1,"column_end":56}},{"value":"/         StructHasCompact(12)","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7231,"byte_end":7263,"line_start":200,"line_end":200,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7264,"byte_end":7273,"line_start":201,"line_end":201,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7274,"byte_end":7279,"line_start":202,"line_end":202,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7280,"byte_end":7283,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq, Encode, Decode)]","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7284,"byte_end":7331,"line_start":204,"line_end":204,"column_start":1,"column_end":48}},{"value":"/ enum TestGenericHasCompact<T> {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7332,"byte_end":7367,"line_start":205,"line_end":205,"column_start":1,"column_end":36}},{"value":"/     A {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7368,"byte_end":7379,"line_start":206,"line_end":206,"column_start":1,"column_end":12}},{"value":"/         #[codec(compact)] a: T","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7380,"byte_end":7414,"line_start":207,"line_end":207,"column_start":1,"column_end":35}},{"value":"/     },","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7415,"byte_end":7425,"line_start":208,"line_end":208,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7426,"byte_end":7431,"line_start":209,"line_end":209,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7432,"byte_end":7435,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ let a = TestGenericHasCompact::A::<StructHasCompact> {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7436,"byte_end":7494,"line_start":211,"line_end":211,"column_start":1,"column_end":59}},{"value":"/     a: StructHasCompact(12325678),","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7495,"byte_end":7533,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/ };","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7534,"byte_end":7540,"line_start":213,"line_end":213,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7541,"byte_end":7544,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ let encoded = a.encode();","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7545,"byte_end":7574,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(encoded.len(), 2);","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7575,"byte_end":7608,"line_start":216,"line_end":216,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7609,"byte_end":7612,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ # fn main() { }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7613,"byte_end":7632,"line_start":218,"line_end":218,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7633,"byte_end":7640,"line_start":219,"line_end":219,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7641,"byte_end":7644,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ ## Derive attributes","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7645,"byte_end":7669,"line_start":221,"line_end":221,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7670,"byte_end":7673,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ The derive implementation supports the following attributes:","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7674,"byte_end":7738,"line_start":223,"line_end":223,"column_start":1,"column_end":65}},{"value":"/ - `codec(dumb_trait_bound)`: This attribute needs to be placed above the type that one of the","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7739,"byte_end":7836,"line_start":224,"line_end":224,"column_start":1,"column_end":98}},{"value":"/   trait should be implemented for. It will make the algorithm that determines the to-add trait","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7837,"byte_end":7935,"line_start":225,"line_end":225,"column_start":1,"column_end":99}},{"value":"/   bounds fall back to just use the type parameters of the type. This can be useful for situation","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":7936,"byte_end":8036,"line_start":226,"line_end":226,"column_start":1,"column_end":101}},{"value":"/   where the algorithm includes private types in the public interface. By using this attribute,","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":8037,"byte_end":8135,"line_start":227,"line_end":227,"column_start":1,"column_end":99}},{"value":"/   you should not get this error/warning again.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":8136,"byte_end":8186,"line_start":228,"line_end":228,"column_start":1,"column_end":51}},{"value":"/ - `codec(skip)`: Needs to be placed above a field  or variant and makes it to be skipped while","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":8187,"byte_end":8285,"line_start":229,"line_end":229,"column_start":1,"column_end":99}},{"value":"/   encoding/decoding.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":8286,"byte_end":8310,"line_start":230,"line_end":230,"column_start":1,"column_end":25}},{"value":"/ - `codec(compact)`: Needs to be placed above a field and makes the field use compact encoding.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":8311,"byte_end":8409,"line_start":231,"line_end":231,"column_start":1,"column_end":99}},{"value":"/   (The type needs to support compact encoding.)","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":8410,"byte_end":8461,"line_start":232,"line_end":232,"column_start":1,"column_end":52}},{"value":"/ - `codec(encoded_as = \"OtherType\")`: Needs to be placed above a field and makes the field being","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":8462,"byte_end":8561,"line_start":233,"line_end":233,"column_start":1,"column_end":100}},{"value":"/   encoded by using `OtherType`.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":8562,"byte_end":8597,"line_start":234,"line_end":234,"column_start":1,"column_end":36}},{"value":"/ - `codec(index = 0)`: Needs to be placed above an enum variant to make the variant use the given","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":8598,"byte_end":8698,"line_start":235,"line_end":235,"column_start":1,"column_end":101}},{"value":"/   index when encoded. By default the index is determined by counting from `0` beginning wth the","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":8699,"byte_end":8798,"line_start":236,"line_end":236,"column_start":1,"column_end":100}},{"value":"/   first variant.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":8799,"byte_end":8819,"line_start":237,"line_end":237,"column_start":1,"column_end":21}},{"value":"warn(missing_docs)","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":8821,"byte_end":8843,"line_start":239,"line_end":239,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9303,"byte_end":9308,"line_start":261,"line_end":261,"column_start":9,"column_end":14},"name":"alloc","qualname":"::alloc","value":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/lib.rs","byte_start":9256,"byte_end":9279,"line_start":259,"line_end":259,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":159},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":13357,"byte_end":13362,"line_start":68,"line_end":68,"column_start":11,"column_end":16},"name":"Input","qualname":"::codec::Input","value":"Input","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" Trait that allows reading of data into a slice.\n","sig":null,"attributes":[{"value":"/ Trait that allows reading of data into a slice.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":13295,"byte_end":13346,"line_start":67,"line_end":67,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":13777,"byte_end":13790,"line_start":75,"line_end":75,"column_start":5,"column_end":18},"name":"remaining_len","qualname":"::codec::Input::remaining_len","value":"pub fn remaining_len(&mut Self) -> Result<Option<usize>, Error>","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Should return the remaining length of the input data. If no information about the input\n length is available, `None` should be returned.","sig":null,"attributes":[{"value":"/ Should return the remaining length of the input data. If no information about the input","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":13366,"byte_end":13457,"line_start":69,"line_end":69,"column_start":2,"column_end":93}},{"value":"/ length is available, `None` should be returned.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":13459,"byte_end":13510,"line_start":70,"line_end":70,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":13512,"byte_end":13515,"line_start":71,"line_end":71,"column_start":2,"column_end":5}},{"value":"/ The length is used to constrain the preallocation while decoding. Returning a garbage","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":13517,"byte_end":13606,"line_start":72,"line_end":72,"column_start":2,"column_end":91}},{"value":"/ length can open the doors for a denial of service attack to your application.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":13608,"byte_end":13689,"line_start":73,"line_end":73,"column_start":2,"column_end":83}},{"value":"/ Otherwise, returning `None` can decrease the performance of your application.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":13691,"byte_end":13772,"line_start":74,"line_end":74,"column_start":2,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":14023,"byte_end":14027,"line_start":81,"line_end":81,"column_start":5,"column_end":9},"name":"read","qualname":"::codec::Input::read","value":"pub fn read(&mut Self, &mut [u8]) -> Result<(), Error>","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Read the exact number of bytes required to fill the given buffer.","sig":null,"attributes":[{"value":"/ Read the exact number of bytes required to fill the given buffer.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":13837,"byte_end":13906,"line_start":77,"line_end":77,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":13908,"byte_end":13911,"line_start":78,"line_end":78,"column_start":2,"column_end":5}},{"value":"/ Note that this function is similar to `std::io::Read::read_exact` and not","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":13913,"byte_end":13990,"line_start":79,"line_end":79,"column_start":2,"column_end":79}},{"value":"/ `std::io::Read::read`.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":13992,"byte_end":14018,"line_start":80,"line_end":80,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":14123,"byte_end":14132,"line_start":84,"line_end":84,"column_start":5,"column_end":14},"name":"read_byte","qualname":"::codec::Input::read_byte","value":"pub fn read_byte(&mut Self) -> Result<u8, Error>","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Read a single byte from the input.\n","sig":null,"attributes":[{"value":"/ Read a single byte from the input.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":14080,"byte_end":14118,"line_start":83,"line_end":83,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":14439,"byte_end":14450,"line_start":94,"line_end":94,"column_start":5,"column_end":16},"name":"descend_ref","qualname":"::codec::Input::descend_ref","value":"pub fn descend_ref(&mut Self) -> Result<(), Error>","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Descend into nested reference when decoding.\n This is called when decoding a new refence-based instance,\n such as `Vec` or `Box`. Currently all such types are\n allocated on the heap.\n","sig":null,"attributes":[{"value":"/ Descend into nested reference when decoding.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":14236,"byte_end":14284,"line_start":90,"line_end":90,"column_start":2,"column_end":50}},{"value":"/ This is called when decoding a new refence-based instance,","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":14286,"byte_end":14348,"line_start":91,"line_end":91,"column_start":2,"column_end":64}},{"value":"/ such as `Vec` or `Box`. Currently all such types are","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":14350,"byte_end":14406,"line_start":92,"line_end":92,"column_start":2,"column_end":58}},{"value":"/ allocated on the heap.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":14408,"byte_end":14434,"line_start":93,"line_end":93,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":14625,"byte_end":14635,"line_start":100,"line_end":100,"column_start":5,"column_end":15},"name":"ascend_ref","qualname":"::codec::Input::ascend_ref","value":"pub fn ascend_ref(&mut Self)","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Ascend to previous structure level when decoding.\n This is called when decoding reference-based type is finished.\n","sig":null,"attributes":[{"value":"/ Ascend to previous structure level when decoding.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":14499,"byte_end":14552,"line_start":98,"line_end":98,"column_start":2,"column_end":55}},{"value":"/ This is called when decoding reference-based type is finished.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":14554,"byte_end":14620,"line_start":99,"line_end":99,"column_start":2,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":172},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":16241,"byte_end":16249,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"IoReader","qualname":"::codec::IoReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper that implements Input for any `Read` type.\n","sig":null,"attributes":[{"value":"/ Wrapper that implements Input for any `Read` type.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":16151,"byte_end":16205,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":16206,"byte_end":16229,"line_start":148,"line_end":148,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":175},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":16268,"byte_end":16273,"line_start":149,"line_end":149,"column_start":39,"column_end":44},"name":"0","qualname":"::codec::IoReader::0","value":"R","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":180},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":16587,"byte_end":16593,"line_start":163,"line_end":163,"column_start":11,"column_end":17},"name":"Output","qualname":"::codec::Output","value":"Output","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"decl_id":null,"docs":" Trait that allows writing of data.\n","sig":null,"attributes":[{"value":"/ Trait that allows writing of data.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":16538,"byte_end":16576,"line_start":162,"line_end":162,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":16626,"byte_end":16631,"line_start":165,"line_end":165,"column_start":5,"column_end":10},"name":"write","qualname":"::codec::Output::write","value":"pub fn write(&mut Self, &[u8])","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Write to the output.\n","sig":null,"attributes":[{"value":"/ Write to the output.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":16597,"byte_end":16621,"line_start":164,"line_end":164,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":16703,"byte_end":16712,"line_start":168,"line_end":168,"column_start":5,"column_end":14},"name":"push_byte","qualname":"::codec::Output::push_byte","value":"pub fn push_byte(&mut Self, u8)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Write a single byte to the output.\n","sig":null,"attributes":[{"value":"/ Write a single byte to the output.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":16660,"byte_end":16698,"line_start":167,"line_end":167,"column_start":2,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":187},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17381,"byte_end":17388,"line_start":195,"line_end":195,"column_start":2,"column_end":9},"name":"Unknown","qualname":"::codec::TypeInfo::Unknown","value":"TypeInfo::Unknown","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Default value of [`Encode::TYPE_INFO`] to not require implementors to set this value in the trait.\n","sig":null,"attributes":[{"value":"/ Default value of [`Encode::TYPE_INFO`] to not require implementors to set this value in the trait.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17277,"byte_end":17379,"line_start":194,"line_end":194,"column_start":2,"column_end":104}}]},{"kind":"TupleVariant","id":{"krate":0,"index":189},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17391,"byte_end":17393,"line_start":196,"line_end":196,"column_start":2,"column_end":4},"name":"U8","qualname":"::codec::TypeInfo::U8","value":"TypeInfo::U8","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":191},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17396,"byte_end":17398,"line_start":197,"line_end":197,"column_start":2,"column_end":4},"name":"I8","qualname":"::codec::TypeInfo::I8","value":"TypeInfo::I8","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":193},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17401,"byte_end":17404,"line_start":198,"line_end":198,"column_start":2,"column_end":5},"name":"U16","qualname":"::codec::TypeInfo::U16","value":"TypeInfo::U16","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":195},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17407,"byte_end":17410,"line_start":199,"line_end":199,"column_start":2,"column_end":5},"name":"I16","qualname":"::codec::TypeInfo::I16","value":"TypeInfo::I16","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":197},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17413,"byte_end":17416,"line_start":200,"line_end":200,"column_start":2,"column_end":5},"name":"U32","qualname":"::codec::TypeInfo::U32","value":"TypeInfo::U32","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":199},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17419,"byte_end":17422,"line_start":201,"line_end":201,"column_start":2,"column_end":5},"name":"I32","qualname":"::codec::TypeInfo::I32","value":"TypeInfo::I32","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":201},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17425,"byte_end":17428,"line_start":202,"line_end":202,"column_start":2,"column_end":5},"name":"U64","qualname":"::codec::TypeInfo::U64","value":"TypeInfo::U64","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":203},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17431,"byte_end":17434,"line_start":203,"line_end":203,"column_start":2,"column_end":5},"name":"I64","qualname":"::codec::TypeInfo::I64","value":"TypeInfo::I64","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":205},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17437,"byte_end":17441,"line_start":204,"line_end":204,"column_start":2,"column_end":6},"name":"U128","qualname":"::codec::TypeInfo::U128","value":"TypeInfo::U128","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":207},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17444,"byte_end":17448,"line_start":205,"line_end":205,"column_start":2,"column_end":6},"name":"I128","qualname":"::codec::TypeInfo::I128","value":"TypeInfo::I128","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":186},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17265,"byte_end":17273,"line_start":193,"line_end":193,"column_start":10,"column_end":18},"name":"TypeInfo","qualname":"::codec::TypeInfo","value":"pub enum TypeInfo {\n    Unknown,\n    U8,\n    I8,\n    U16,\n    I16,\n    U32,\n    I32,\n    U64,\n    I64,\n    U128,\n    I128,\n}","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":207}],"decl_id":null,"docs":" !INTERNAL USE ONLY!","sig":null,"attributes":[{"value":"/ !INTERNAL USE ONLY!","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17095,"byte_end":17118,"line_start":188,"line_end":188,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17119,"byte_end":17122,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ This enum provides type information to optimize encoding/decoding by doing fake specialization.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17123,"byte_end":17222,"line_start":190,"line_end":190,"column_start":1,"column_end":100}},{"value":"non_exhaustive","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17238,"byte_end":17255,"line_start":192,"line_end":192,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":209},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17718,"byte_end":17724,"line_start":212,"line_end":212,"column_start":11,"column_end":17},"name":"Encode","qualname":"::codec::Encode","value":"Encode","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":219}],"decl_id":null,"docs":" Trait that allows zero-copy write of value-references to slices in LE format.","sig":null,"attributes":[{"value":"/ Trait that allows zero-copy write of value-references to slices in LE format.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17453,"byte_end":17534,"line_start":208,"line_end":208,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17535,"byte_end":17538,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Implementations should override `using_encoded` for value types and `encode_to` and `size_hint` for allocating types.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17539,"byte_end":17660,"line_start":210,"line_end":210,"column_start":1,"column_end":122}},{"value":"/ Wrapper types should override all methods.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17661,"byte_end":17707,"line_start":211,"line_end":211,"column_start":1,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":210},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17865,"byte_end":17874,"line_start":216,"line_end":216,"column_start":8,"column_end":17},"name":"TYPE_INFO","qualname":"::codec::Encode::TYPE_INFO","value":"TypeInfo","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":18076,"byte_end":18085,"line_start":222,"line_end":222,"column_start":5,"column_end":14},"name":"size_hint","qualname":"::codec::Encode::size_hint","value":"pub fn size_hint(&Self) -> usize","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" If possible give a hint of expected size of the encoding.","sig":null,"attributes":[{"value":"/ If possible give a hint of expected size of the encoding.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17908,"byte_end":17969,"line_start":218,"line_end":218,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17971,"byte_end":17974,"line_start":219,"line_end":219,"column_start":2,"column_end":5}},{"value":"/ This method is used inside default implementation of `encode`","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":17976,"byte_end":18041,"line_start":220,"line_end":220,"column_start":2,"column_end":67}},{"value":"/ to avoid re-allocations.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":18043,"byte_end":18071,"line_start":221,"line_end":221,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":18179,"byte_end":18188,"line_start":227,"line_end":227,"column_start":5,"column_end":14},"name":"encode_to","qualname":"::codec::Encode::encode_to","value":"pub fn encode_to<T: Output + ?Sized>(&Self, &mut T)","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Convert self to a slice and append it to the destination.\n","sig":null,"attributes":[{"value":"/ Convert self to a slice and append it to the destination.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":18113,"byte_end":18174,"line_start":226,"line_end":226,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":18323,"byte_end":18329,"line_start":232,"line_end":232,"column_start":5,"column_end":11},"name":"encode","qualname":"::codec::Encode::encode","value":"pub fn encode(&Self) -> Vec<u8>","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Convert self to an owned vector.\n","sig":null,"attributes":[{"value":"/ Convert self to an owned vector.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":18282,"byte_end":18318,"line_start":231,"line_end":231,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":18512,"byte_end":18525,"line_start":239,"line_end":239,"column_start":5,"column_end":18},"name":"using_encoded","qualname":"::codec::Encode::using_encoded","value":"pub fn using_encoded<R, F: FnOnce(&[u8]) -> R>(&Self, F) -> R","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Convert self to a slice and then invoke the given closure with it.\n","sig":null,"attributes":[{"value":"/ Convert self to a slice and then invoke the given closure with it.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":18437,"byte_end":18507,"line_start":238,"line_end":238,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":18942,"byte_end":18954,"line_start":251,"line_end":251,"column_start":5,"column_end":17},"name":"encoded_size","qualname":"::codec::Encode::encoded_size","value":"pub fn encoded_size(&Self) -> usize","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Calculates the encoded size.","sig":null,"attributes":[{"value":"/ Calculates the encoded size.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":18597,"byte_end":18629,"line_start":243,"line_end":243,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":18631,"byte_end":18634,"line_start":244,"line_end":244,"column_start":2,"column_end":5}},{"value":"/ Should be used when the encoded data isn't required.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":18636,"byte_end":18692,"line_start":245,"line_end":245,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":18694,"byte_end":18697,"line_start":246,"line_end":246,"column_start":2,"column_end":5}},{"value":"/ # Note","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":18699,"byte_end":18709,"line_start":247,"line_end":247,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":18711,"byte_end":18714,"line_start":248,"line_end":248,"column_start":2,"column_end":5}},{"value":"/ This works by using a special [`Output`] that only tracks the size. So, there are no allocations inside the ","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":18716,"byte_end":18828,"line_start":249,"line_end":249,"column_start":2,"column_end":114}},{"value":"/ output. However, this can not prevent allocations that some types are doing inside their own encoding. ","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":18830,"byte_end":18937,"line_start":250,"line_end":250,"column_start":2,"column_end":109}}]},{"kind":"Trait","id":{"krate":0,"index":225},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":19505,"byte_end":19517,"line_start":275,"line_end":275,"column_start":11,"column_end":23},"name":"DecodeLength","qualname":"::codec::DecodeLength","value":"DecodeLength","parent":null,"children":[{"krate":0,"index":226}],"decl_id":null,"docs":" Trait that allows the length of a collection to be read, without having\n to read and decode the entire elements.\n","sig":null,"attributes":[{"value":"/ Trait that allows the length of a collection to be read, without having","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":19375,"byte_end":19450,"line_start":273,"line_end":273,"column_start":1,"column_end":76}},{"value":"/ to read and decode the entire elements.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":19451,"byte_end":19494,"line_start":274,"line_end":274,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":19578,"byte_end":19581,"line_start":277,"line_end":277,"column_start":5,"column_end":8},"name":"len","qualname":"::codec::DecodeLength::len","value":"pub fn len(&[u8]) -> Result<usize, Error>","parent":{"krate":0,"index":225},"children":[],"decl_id":null,"docs":" Return the number of elements in `self_encoded`.\n","sig":null,"attributes":[{"value":"/ Return the number of elements in `self_encoded`.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":19521,"byte_end":19573,"line_start":276,"line_end":276,"column_start":2,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":227},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":19724,"byte_end":19730,"line_start":281,"line_end":281,"column_start":11,"column_end":17},"name":"Decode","qualname":"::codec::Decode","value":"Decode: Sized","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":234}],"decl_id":null,"docs":" Trait that allows zero-copy read of value-references from slices in LE format.\n","sig":null,"attributes":[{"value":"/ Trait that allows zero-copy read of value-references from slices in LE format.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":19631,"byte_end":19713,"line_start":280,"line_end":280,"column_start":1,"column_end":83}}]},{"kind":"Const","id":{"krate":0,"index":228},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":19878,"byte_end":19887,"line_start":285,"line_end":285,"column_start":8,"column_end":17},"name":"TYPE_INFO","qualname":"::codec::Decode::TYPE_INFO","value":"TypeInfo","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":19974,"byte_end":19980,"line_start":288,"line_end":288,"column_start":5,"column_end":11},"name":"decode","qualname":"::codec::Decode::decode","value":"pub fn decode<I: Input>(&mut I) -> Result<Self, Error>","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" Attempt to deserialise the value from input.\n","sig":null,"attributes":[{"value":"/ Attempt to deserialise the value from input.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":19921,"byte_end":19969,"line_start":287,"line_end":287,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20260,"byte_end":20264,"line_start":294,"line_end":294,"column_start":5,"column_end":9},"name":"skip","qualname":"::codec::Decode::skip","value":"pub fn skip<I: Input>(&mut I) -> Result<(), Error>","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" Attempt to skip the encoded value from input.","sig":null,"attributes":[{"value":"/ Attempt to skip the encoded value from input.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20032,"byte_end":20081,"line_start":290,"line_end":290,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20083,"byte_end":20086,"line_start":291,"line_end":291,"column_start":2,"column_end":5}},{"value":"/ The default implementation of this function is just calling [`Decode::decode`].","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20088,"byte_end":20171,"line_start":292,"line_end":292,"column_start":2,"column_end":85}},{"value":"/ When possible, an implementation should provided a specialized implementation.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20173,"byte_end":20255,"line_start":293,"line_end":293,"column_start":2,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20597,"byte_end":20615,"line_start":304,"line_end":304,"column_start":5,"column_end":23},"name":"encoded_fixed_size","qualname":"::codec::Decode::encoded_fixed_size","value":"pub fn encoded_fixed_size() -> Option<usize>","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" Returns the fixed encoded size of the type.","sig":null,"attributes":[{"value":"/ Returns the fixed encoded size of the type.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20352,"byte_end":20399,"line_start":298,"line_end":298,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20401,"byte_end":20404,"line_start":299,"line_end":299,"column_start":2,"column_end":5}},{"value":"/ If it returns `Some(size)` then all possible values of this","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20406,"byte_end":20469,"line_start":300,"line_end":300,"column_start":2,"column_end":65}},{"value":"/ type have the given size (in bytes) when encoded.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20471,"byte_end":20524,"line_start":301,"line_end":301,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20526,"byte_end":20529,"line_start":302,"line_end":302,"column_start":2,"column_end":5}},{"value":"/ NOTE: A type with a fixed encoded size may return `None`.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20531,"byte_end":20592,"line_start":303,"line_end":303,"column_start":2,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":235},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20752,"byte_end":20757,"line_start":310,"line_end":310,"column_start":11,"column_end":16},"name":"Codec","qualname":"::codec::Codec","value":"Codec: Decode + Encode","parent":null,"children":[],"decl_id":null,"docs":" Trait that allows zero-copy read/write of value-references to/from slices in LE format.\n","sig":null,"attributes":[{"value":"/ Trait that allows zero-copy read/write of value-references to/from slices in LE format.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20650,"byte_end":20741,"line_start":309,"line_end":309,"column_start":1,"column_end":92}}]},{"kind":"Trait","id":{"krate":0,"index":238},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20961,"byte_end":20971,"line_start":315,"line_end":315,"column_start":11,"column_end":21},"name":"FullEncode","qualname":"::codec::FullEncode","value":"FullEncode: Encode + EncodeLike","parent":null,"children":[],"decl_id":null,"docs":" Trait that bound `EncodeLike` along with `Encode`. Usefull for generic being used in function\n with `EncodeLike` parameters.\n","sig":null,"attributes":[{"value":"/ Trait that bound `EncodeLike` along with `Encode`. Usefull for generic being used in function","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20819,"byte_end":20916,"line_start":313,"line_end":313,"column_start":1,"column_end":98}},{"value":"/ with `EncodeLike` parameters.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20917,"byte_end":20950,"line_start":314,"line_end":314,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":241},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21187,"byte_end":21196,"line_start":320,"line_end":320,"column_start":11,"column_end":20},"name":"FullCodec","qualname":"::codec::FullCodec","value":"FullCodec: Decode + FullEncode","parent":null,"children":[],"decl_id":null,"docs":" Trait that bound `EncodeLike` along with `Codec`. Usefull for generic being used in function\n with `EncodeLike` parameters.\n","sig":null,"attributes":[{"value":"/ Trait that bound `EncodeLike` along with `Codec`. Usefull for generic being used in function","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21046,"byte_end":21142,"line_start":318,"line_end":318,"column_start":1,"column_end":97}},{"value":"/ with `EncodeLike` parameters.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21143,"byte_end":21176,"line_start":319,"line_end":319,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":244},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21585,"byte_end":21602,"line_start":330,"line_end":330,"column_start":11,"column_end":28},"name":"WrapperTypeEncode","qualname":"::codec::WrapperTypeEncode","value":"WrapperTypeEncode: Deref","parent":null,"children":[],"decl_id":null,"docs":" A marker trait for types that wrap other encodable type.","sig":null,"attributes":[{"value":"/ A marker trait for types that wrap other encodable type.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21270,"byte_end":21330,"line_start":323,"line_end":323,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21331,"byte_end":21334,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ Such types should not carry any additional information","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21335,"byte_end":21393,"line_start":325,"line_end":325,"column_start":1,"column_end":59}},{"value":"/ that would require to be encoded, because the encoding","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21394,"byte_end":21452,"line_start":326,"line_end":326,"column_start":1,"column_end":59}},{"value":"/ is assumed to be the same as the wrapped type.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21453,"byte_end":21503,"line_start":327,"line_end":327,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21504,"byte_end":21507,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ The wrapped type that is referred to is the [`Deref::Target`].","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21508,"byte_end":21574,"line_start":329,"line_end":329,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":317},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":24070,"byte_end":24087,"line_start":415,"line_end":415,"column_start":11,"column_end":28},"name":"WrapperTypeDecode","qualname":"::codec::WrapperTypeDecode","value":"WrapperTypeDecode: Sized","parent":null,"children":[{"krate":0,"index":318}],"decl_id":null,"docs":" A marker trait for types that can be created solely from other decodable types.","sig":null,"attributes":[{"value":"/ A marker trait for types that can be created solely from other decodable types.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":23895,"byte_end":23978,"line_start":412,"line_end":412,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":23979,"byte_end":23982,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ The decoding of such type is assumed to be the same as the wrapped type.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":23983,"byte_end":24059,"line_start":414,"line_end":414,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":318},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":24124,"byte_end":24131,"line_start":417,"line_end":417,"column_start":7,"column_end":14},"name":"Wrapped","qualname":"::codec::WrapperTypeDecode::Wrapped","value":"type Wrapped: Into<Self>;","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":" A wrapped type.\n","sig":null,"attributes":[{"value":"/ A wrapped type.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":24098,"byte_end":24117,"line_start":416,"line_end":416,"column_start":2,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":334},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":25884,"byte_end":25895,"line_start":469,"line_end":469,"column_start":11,"column_end":22},"name":"EncodeAsRef","qualname":"::codec::EncodeAsRef","value":"EncodeAsRef<'a, T: 'a>","parent":null,"children":[{"krate":0,"index":337}],"decl_id":null,"docs":" Something that can be encoded as a reference.\n","sig":null,"attributes":[{"value":"/ Something that can be encoded as a reference.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":25824,"byte_end":25873,"line_start":468,"line_end":468,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":337},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":25966,"byte_end":25973,"line_start":471,"line_end":471,"column_start":7,"column_end":14},"name":"RefType","qualname":"::codec::EncodeAsRef::RefType","value":"type RefType: Encode + From<&'a T>;","parent":{"krate":0,"index":334},"children":[],"decl_id":null,"docs":" The reference type that is used for encoding.\n","sig":null,"attributes":[{"value":"/ The reference type that is used for encoding.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":25910,"byte_end":25959,"line_start":470,"line_end":470,"column_start":2,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1038},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":27195,"byte_end":27205,"line_start":522,"line_end":522,"column_start":12,"column_end":22},"name":"OptionBool","qualname":"::codec::OptionBool","value":"","parent":null,"children":[],"decl_id":null,"docs":" Shim type because we can't do a specialised implementation for `Option<bool>` directly.\n","sig":null,"attributes":[{"value":"/ Shim type because we can't do a specialised implementation for `Option<bool>` directly.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":27054,"byte_end":27145,"line_start":520,"line_end":520,"column_start":1,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":1040},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":27206,"byte_end":27222,"line_start":522,"line_end":522,"column_start":23,"column_end":39},"name":"0","qualname":"::codec::OptionBool::0","value":"std::option::Option<bool>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":604},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":64661,"byte_end":64671,"line_start":74,"line_end":74,"column_start":11,"column_end":21},"name":"CompactLen","qualname":"::compact::CompactLen","value":"CompactLen<T>","parent":null,"children":[{"krate":0,"index":606}],"decl_id":null,"docs":" Something that can return the compact encoded length for a given value.\n","sig":null,"attributes":[{"value":"/ Something that can return the compact encoded length for a given value.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":64575,"byte_end":64650,"line_start":73,"line_end":73,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":64742,"byte_end":64753,"line_start":76,"line_end":76,"column_start":5,"column_end":16},"name":"compact_len","qualname":"::compact::CompactLen::compact_len","value":"pub fn compact_len(&T) -> usize","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" Returns the compact encoded length for the given value.\n","sig":null,"attributes":[{"value":"/ Returns the compact encoded length for the given value.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":64678,"byte_end":64737,"line_start":75,"line_end":75,"column_start":2,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2481},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":64982,"byte_end":64989,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"Compact","qualname":"::compact::Compact","value":"","parent":null,"children":[],"decl_id":null,"docs":" Compact-encoded variant of T. This is more space-efficient but less compute-efficient.\n","sig":null,"attributes":[{"value":"/ Compact-encoded variant of T. This is more space-efficient but less compute-efficient.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":64776,"byte_end":64866,"line_start":79,"line_end":79,"column_start":1,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":2484},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":64993,"byte_end":64998,"line_start":82,"line_end":82,"column_start":23,"column_end":28},"name":"0","qualname":"::compact::Compact::0","value":"T","parent":{"krate":0,"index":2481},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":614},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":65239,"byte_end":65248,"line_start":93,"line_end":93,"column_start":11,"column_end":20},"name":"CompactAs","qualname":"::compact::CompactAs","value":"CompactAs: From<Compact<Self>>","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617}],"decl_id":null,"docs":" Allow foreign structs to be wrap in Compact\n","sig":null,"attributes":[{"value":"/ Allow foreign structs to be wrap in Compact","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":65181,"byte_end":65228,"line_start":92,"line_end":92,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":615},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":65345,"byte_end":65347,"line_start":95,"line_end":95,"column_start":7,"column_end":9},"name":"As","qualname":"::compact::CompactAs::As","value":"type As;","parent":{"krate":0,"index":614},"children":[],"decl_id":null,"docs":" A compact-encodable type that should be used as the encoding.\n","sig":null,"attributes":[{"value":"/ A compact-encodable type that should be used as the encoding.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":65273,"byte_end":65338,"line_start":94,"line_end":94,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":65395,"byte_end":65404,"line_start":98,"line_end":98,"column_start":5,"column_end":14},"name":"encode_as","qualname":"::compact::CompactAs::encode_as","value":"pub fn encode_as(&Self) -> &Self::As","parent":{"krate":0,"index":614},"children":[],"decl_id":null,"docs":" Returns the compact-encodable type.\n","sig":null,"attributes":[{"value":"/ Returns the compact-encodable type.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":65351,"byte_end":65390,"line_start":97,"line_end":97,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":65481,"byte_end":65492,"line_start":101,"line_end":101,"column_start":5,"column_end":16},"name":"decode_from","qualname":"::compact::CompactAs::decode_from","value":"pub fn decode_from(Self::As) -> Result<Self, Error>","parent":{"krate":0,"index":614},"children":[],"decl_id":null,"docs":" Decode `Self` from the compact-decoded type.\n","sig":null,"attributes":[{"value":"/ Decode `Self` from the compact-decoded type.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":65428,"byte_end":65476,"line_start":100,"line_end":100,"column_start":2,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2519},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":67236,"byte_end":67246,"line_start":183,"line_end":183,"column_start":12,"column_end":22},"name":"CompactRef","qualname":"::compact::CompactRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Compact-encoded variant of &'a T. This is more space-efficient but less compute-efficient.\n","sig":null,"attributes":[{"value":"/ Compact-encoded variant of &'a T. This is more space-efficient but less compute-efficient.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":67092,"byte_end":67186,"line_start":181,"line_end":181,"column_start":1,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":2523},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":67254,"byte_end":67263,"line_start":183,"line_end":183,"column_start":30,"column_end":39},"name":"0","qualname":"::compact::CompactRef::0","value":"&'a T","parent":{"krate":0,"index":2519},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":667},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":68105,"byte_end":68115,"line_start":210,"line_end":210,"column_start":11,"column_end":21},"name":"HasCompact","qualname":"::compact::HasCompact","value":"HasCompact: Sized","parent":null,"children":[{"krate":0,"index":668}],"decl_id":null,"docs":" Trait that tells you if a given type can be encoded/decoded in a compact way.\n","sig":null,"attributes":[{"value":"/ Trait that tells you if a given type can be encoded/decoded in a compact way.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":68013,"byte_end":68094,"line_start":209,"line_end":209,"column_start":1,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":668},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":68166,"byte_end":68170,"line_start":212,"line_end":212,"column_start":7,"column_end":11},"name":"Type","qualname":"::compact::HasCompact::Type","value":"type Type: for<'a> EncodeAsRef<'a, Self> + Decode + From<Self> + Into<Self>;","parent":{"krate":0,"index":667},"children":[],"decl_id":null,"docs":" The compact type; this can be\n","sig":null,"attributes":[{"value":"/ The compact type; this can be","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":68126,"byte_end":68159,"line_start":211,"line_end":211,"column_start":2,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":771},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/joiner.rs","byte_start":88959,"byte_end":88965,"line_start":23,"line_end":23,"column_start":11,"column_end":17},"name":"Joiner","qualname":"::joiner::Joiner","value":"Joiner","parent":null,"children":[{"krate":0,"index":772}],"decl_id":null,"docs":" Trait to allow itself to be serialised into a value which can be extended\n by bytes.\n","sig":null,"attributes":[{"value":"/ Trait to allow itself to be serialised into a value which can be extended","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/joiner.rs","byte_start":88857,"byte_end":88934,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ by bytes.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/joiner.rs","byte_start":88935,"byte_end":88948,"line_start":22,"line_end":22,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/joiner.rs","byte_start":89013,"byte_end":89016,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"and","qualname":"::joiner::Joiner::and","value":"pub fn and<V: Codec + Sized>(Self, &V) -> Self","parent":{"krate":0,"index":771},"children":[],"decl_id":null,"docs":" Append encoding of value to `Self`.\n","sig":null,"attributes":[{"value":"/ Append encoding of value to `Self`.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/joiner.rs","byte_start":88969,"byte_end":89008,"line_start":24,"line_end":24,"column_start":2,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":790},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/keyedvec.rs","byte_start":90030,"byte_end":90038,"line_start":23,"line_end":23,"column_start":11,"column_end":19},"name":"KeyedVec","qualname":"::keyedvec::KeyedVec","value":"KeyedVec","parent":null,"children":[{"krate":0,"index":791}],"decl_id":null,"docs":" Trait to allow itself to be serialised and prepended by a given slice.\n","sig":null,"attributes":[{"value":"/ Trait to allow itself to be serialised and prepended by a given slice.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/keyedvec.rs","byte_start":89945,"byte_end":90019,"line_start":22,"line_end":22,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/keyedvec.rs","byte_start":90105,"byte_end":90117,"line_start":25,"line_end":25,"column_start":5,"column_end":17},"name":"to_keyed_vec","qualname":"::keyedvec::KeyedVec::to_keyed_vec","value":"pub fn to_keyed_vec(&Self, &[u8]) -> Vec<u8>","parent":{"krate":0,"index":790},"children":[],"decl_id":null,"docs":" Return an encoding of `Self` prepended by given slice.\n","sig":null,"attributes":[{"value":"/ Return an encoding of `Self` prepended by given slice.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/keyedvec.rs","byte_start":90042,"byte_end":90100,"line_start":24,"line_end":24,"column_start":2,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":805},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/decode_all.rs","byte_start":91263,"byte_end":91272,"line_start":22,"line_end":22,"column_start":11,"column_end":20},"name":"DecodeAll","qualname":"::decode_all::DecodeAll","value":"DecodeAll: Sized","parent":null,"children":[{"krate":0,"index":806}],"decl_id":null,"docs":" Extension trait to [`Decode`] that ensures that the given input data is consumed completly while\n decoding.\n","sig":null,"attributes":[{"value":"/ Extension trait to [`Decode`] that ensures that the given input data is consumed completly while","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/decode_all.rs","byte_start":91138,"byte_end":91238,"line_start":20,"line_end":20,"column_start":1,"column_end":101}},{"value":"/ decoding.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/decode_all.rs","byte_start":91239,"byte_end":91252,"line_start":21,"line_end":21,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/decode_all.rs","byte_start":91407,"byte_end":91417,"line_start":26,"line_end":26,"column_start":5,"column_end":15},"name":"decode_all","qualname":"::decode_all::DecodeAll::decode_all","value":"pub fn decode_all(&mut &[u8]) -> Result<Self, Error>","parent":{"krate":0,"index":805},"children":[],"decl_id":null,"docs":" Decode `Self` and consume all of the given input data.","sig":null,"attributes":[{"value":"/ Decode `Self` and consume all of the given input data.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/decode_all.rs","byte_start":91283,"byte_end":91341,"line_start":23,"line_end":23,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/decode_all.rs","byte_start":91343,"byte_end":91346,"line_start":24,"line_end":24,"column_start":2,"column_end":5}},{"value":"/ If not all data is consumed, an error is returned.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/decode_all.rs","byte_start":91348,"byte_end":91402,"line_start":25,"line_end":25,"column_start":2,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":822},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/depth_limit.rs","byte_start":94184,"byte_end":94195,"line_start":21,"line_end":21,"column_start":11,"column_end":22},"name":"DecodeLimit","qualname":"::depth_limit::DecodeLimit","value":"DecodeLimit: Sized","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":825}],"decl_id":null,"docs":" Extension trait to [`Decode`] for decoding with a maximum recursion depth.\n","sig":null,"attributes":[{"value":"/ Extension trait to [`Decode`] for decoding with a maximum recursion depth.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/depth_limit.rs","byte_start":94095,"byte_end":94173,"line_start":20,"line_end":20,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/depth_limit.rs","byte_start":94376,"byte_end":94399,"line_start":26,"line_end":26,"column_start":5,"column_end":28},"name":"decode_with_depth_limit","qualname":"::depth_limit::DecodeLimit::decode_with_depth_limit","value":"pub fn decode_with_depth_limit<I: Input>(u32, &mut I) -> Result<Self, Error>","parent":{"krate":0,"index":822},"children":[],"decl_id":null,"docs":" Decode `Self` with the given maximum recursion depth and advance `input` by the number of\n bytes consumed.","sig":null,"attributes":[{"value":"/ Decode `Self` with the given maximum recursion depth and advance `input` by the number of","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/depth_limit.rs","byte_start":94206,"byte_end":94299,"line_start":22,"line_end":22,"column_start":2,"column_end":95}},{"value":"/ bytes consumed.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/depth_limit.rs","byte_start":94301,"byte_end":94320,"line_start":23,"line_end":23,"column_start":2,"column_end":21}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/depth_limit.rs","byte_start":94322,"byte_end":94325,"line_start":24,"line_end":24,"column_start":2,"column_end":5}},{"value":"/ If `limit` is hit, an error is returned.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/depth_limit.rs","byte_start":94327,"byte_end":94371,"line_start":25,"line_end":25,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/depth_limit.rs","byte_start":94605,"byte_end":94632,"line_start":31,"line_end":31,"column_start":5,"column_end":32},"name":"decode_all_with_depth_limit","qualname":"::depth_limit::DecodeLimit::decode_all_with_depth_limit","value":"pub fn decode_all_with_depth_limit(u32, &mut &[u8]) -> Result<Self, Error>","parent":{"krate":0,"index":822},"children":[],"decl_id":null,"docs":" Decode `Self` and consume all of the given input data.","sig":null,"attributes":[{"value":"/ Decode `Self` and consume all of the given input data.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/depth_limit.rs","byte_start":94463,"byte_end":94521,"line_start":28,"line_end":28,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/depth_limit.rs","byte_start":94523,"byte_end":94526,"line_start":29,"line_end":29,"column_start":2,"column_end":5}},{"value":"/ If not all data is consumed or `limit` is hit, an error is returned.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/depth_limit.rs","byte_start":94528,"byte_end":94600,"line_start":30,"line_end":30,"column_start":2,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":876},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98176,"byte_end":98188,"line_start":24,"line_end":24,"column_start":11,"column_end":23},"name":"EncodeAppend","qualname":"::encode_append::EncodeAppend","value":"EncodeAppend","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878}],"decl_id":null,"docs":" Trait that allows to append items to an encoded representation without\n decoding all previous added items.\n","sig":null,"attributes":[{"value":"/ Trait that allows to append items to an encoded representation without","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98052,"byte_end":98126,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ decoding all previous added items.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98127,"byte_end":98165,"line_start":23,"line_end":23,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":877},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98234,"byte_end":98238,"line_start":26,"line_end":26,"column_start":7,"column_end":11},"name":"Item","qualname":"::encode_append::EncodeAppend::Item","value":"type Item: Encode;","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":" The item that will be appended.\n","sig":null,"attributes":[{"value":"/ The item that will be appended.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98192,"byte_end":98227,"line_start":25,"line_end":25,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98855,"byte_end":98868,"line_start":45,"line_end":45,"column_start":5,"column_end":18},"name":"append_or_new","qualname":"::encode_append::EncodeAppend::append_or_new","value":"pub fn append_or_new<EncodeLikeItem, I>(Vec<u8>, I) -> Result<Vec<u8>, Error>\nwhere I: IntoIterator<Item = EncodeLikeItem>,\nEncodeLikeItem: EncodeLike<Self::Item>, I::IntoIter: ExactSizeIterator","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":" Append all items in `iter` to the given `self_encoded` representation\n or if `self_encoded` value is empty, `iter` is encoded to the `Self` representation.","sig":null,"attributes":[{"value":"/ Append all items in `iter` to the given `self_encoded` representation","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98250,"byte_end":98323,"line_start":28,"line_end":28,"column_start":2,"column_end":75}},{"value":"/ or if `self_encoded` value is empty, `iter` is encoded to the `Self` representation.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98325,"byte_end":98413,"line_start":29,"line_end":29,"column_start":2,"column_end":90}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98415,"byte_end":98418,"line_start":30,"line_end":30,"column_start":2,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98420,"byte_end":98433,"line_start":31,"line_end":31,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98435,"byte_end":98438,"line_start":32,"line_end":32,"column_start":2,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98440,"byte_end":98447,"line_start":33,"line_end":33,"column_start":2,"column_end":9}},{"value":"/# use parity_scale_codec::EncodeAppend;","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98449,"byte_end":98491,"line_start":34,"line_end":34,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98493,"byte_end":98496,"line_start":35,"line_end":35,"column_start":2,"column_end":5}},{"value":"/ // Some encoded data","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98498,"byte_end":98522,"line_start":36,"line_end":36,"column_start":2,"column_end":26}},{"value":"/ let data = Vec::new();","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98524,"byte_end":98550,"line_start":37,"line_end":37,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98552,"byte_end":98555,"line_start":38,"line_end":38,"column_start":2,"column_end":5}},{"value":"/ let item = 8u32;","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98557,"byte_end":98577,"line_start":39,"line_end":39,"column_start":2,"column_end":22}},{"value":"/ let encoded = <Vec<u32> as EncodeAppend>::append_or_new(data, std::iter::once(&item)).expect(\"Adds new element\");","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98579,"byte_end":98696,"line_start":40,"line_end":40,"column_start":2,"column_end":119}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98698,"byte_end":98701,"line_start":41,"line_end":41,"column_start":2,"column_end":5}},{"value":"/ // Add multiple element","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98703,"byte_end":98730,"line_start":42,"line_end":42,"column_start":2,"column_end":29}},{"value":"/ <Vec<u32> as EncodeAppend>::append_or_new(encoded, &[700u32, 800u32, 10u32]).expect(\"Adds new elements\");","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98732,"byte_end":98841,"line_start":43,"line_end":43,"column_start":2,"column_end":111}},{"value":"/ ```","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":98843,"byte_end":98850,"line_start":44,"line_end":44,"column_start":2,"column_end":9}}]},{"kind":"Trait","id":{"krate":0,"index":907},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107250,"byte_end":107260,"line_start":73,"line_end":73,"column_start":11,"column_end":21},"name":"EncodeLike","qualname":"::encode_like::EncodeLike","value":"EncodeLike<T: Encode = Self>: Sized + Encode","parent":null,"children":[],"decl_id":null,"docs":" A marker trait that tells the compiler that a type encode to the same representation as another\n type.","sig":null,"attributes":[{"value":"/ A marker trait that tells the compiler that a type encode to the same representation as another","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105151,"byte_end":105250,"line_start":17,"line_end":17,"column_start":1,"column_end":100}},{"value":"/ type.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105251,"byte_end":105260,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105261,"byte_end":105264,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ E.g. `Vec<u8>` has the same encoded representation as `&[u8]`.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105265,"byte_end":105331,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105332,"byte_end":105335,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105336,"byte_end":105349,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105350,"byte_end":105353,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105354,"byte_end":105361,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/# use parity_scale_codec::{EncodeLike, Encode};","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105362,"byte_end":105412,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ fn encode_like<T: Encode, R: EncodeLike<T>>(data: &R) {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105413,"byte_end":105472,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/     data.encode(); // Valid `T` encoded value.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105473,"byte_end":105523,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105524,"byte_end":105529,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105530,"byte_end":105533,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105534,"byte_end":105549,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/     // Just pass the a reference to the normal tuple.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105550,"byte_end":105607,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/     encode_like::<(u32, u32), _>(&(1u32, 2u32));","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105608,"byte_end":105660,"line_start":32,"line_end":32,"column_start":1,"column_end":53}},{"value":"/     // Pass a tuple of references","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105661,"byte_end":105698,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/     encode_like::<(u32, u32), _>(&(&1u32, &2u32));","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105699,"byte_end":105753,"line_start":34,"line_end":34,"column_start":1,"column_end":55}},{"value":"/     // Pass a tuple of a reference and a value.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105754,"byte_end":105805,"line_start":35,"line_end":35,"column_start":1,"column_end":52}},{"value":"/     encode_like::<(u32, u32), _>(&(&1u32, 2u32));","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105806,"byte_end":105859,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105860,"byte_end":105865,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105866,"byte_end":105873,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105874,"byte_end":105877,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105878,"byte_end":105891,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105892,"byte_end":105895,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The relation is not symetric, `T` implements `EncodeLike<U>` does not mean `U` has same","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105896,"byte_end":105987,"line_start":42,"line_end":42,"column_start":1,"column_end":92}},{"value":"/ representation as `T`.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":105988,"byte_end":106014,"line_start":43,"line_end":43,"column_start":1,"column_end":27}},{"value":"/ For instance we could imaging a non zero integer to be encoded to the same representation as","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106015,"byte_end":106111,"line_start":44,"line_end":44,"column_start":1,"column_end":97}},{"value":"/ the said integer but not the other way around.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106112,"byte_end":106162,"line_start":45,"line_end":45,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106163,"byte_end":106166,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Limitation","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106167,"byte_end":106183,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106184,"byte_end":106187,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Not all possible implementations of EncodeLike are implemented (for instance `Box<Box<u32>>`","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106188,"byte_end":106284,"line_start":49,"line_end":49,"column_start":1,"column_end":97}},{"value":"/ does not implement `EncodeLike<u32>`). To bypass this issue either open a PR to add the new","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106285,"byte_end":106380,"line_start":50,"line_end":50,"column_start":1,"column_end":96}},{"value":"/ combination or use [`Ref`](./struct.Ref.html) reference wrapper or define your own wrapper","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106381,"byte_end":106475,"line_start":51,"line_end":51,"column_start":1,"column_end":95}},{"value":"/ and implement `EncodeLike` on it as such:","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106476,"byte_end":106521,"line_start":52,"line_end":52,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106522,"byte_end":106529,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/# use parity_scale_codec::{EncodeLike, Encode, WrapperTypeEncode};","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106530,"byte_end":106599,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ fn encode_like<T: Encode, R: EncodeLike<T>>(data: &R) {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106600,"byte_end":106659,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/     data.encode(); // Valid `T` encoded value.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106660,"byte_end":106710,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106711,"byte_end":106716,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106717,"byte_end":106720,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ struct MyWrapper<'a>(&'a (Box<Box<u32>>, u32));","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106721,"byte_end":106772,"line_start":59,"line_end":59,"column_start":1,"column_end":52}},{"value":"/ impl<'a> core::ops::Deref for MyWrapper<'a> { // Or use derive_deref crate","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106773,"byte_end":106851,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/     type Target = (Box<Box<u32>>, u32);","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106852,"byte_end":106895,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/     fn deref(&self) -> &Self::Target { &self.0 }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106896,"byte_end":106948,"line_start":62,"line_end":62,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106949,"byte_end":106954,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106955,"byte_end":106958,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ impl<'a> parity_scale_codec::WrapperTypeEncode for MyWrapper<'a> {}","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":106959,"byte_end":107030,"line_start":65,"line_end":65,"column_start":1,"column_end":72}},{"value":"/ impl<'a> parity_scale_codec::EncodeLike<(u32, u32)> for MyWrapper<'a> {}","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107031,"byte_end":107107,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107108,"byte_end":107111,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107112,"byte_end":107127,"line_start":68,"line_end":68,"column_start":1,"column_end":16}},{"value":"/     let v = (Box::new(Box::new(0)), 0);","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107128,"byte_end":107171,"line_start":69,"line_end":69,"column_start":1,"column_end":44}},{"value":"/     encode_like::<(u32, u32), _>(&MyWrapper(&v));","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107172,"byte_end":107225,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107226,"byte_end":107231,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107232,"byte_end":107239,"line_start":72,"line_end":72,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":909},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107697,"byte_end":107700,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"Ref","qualname":"::encode_like::Ref","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference wrapper that implement encode like any type that is encoded like its inner type.","sig":null,"attributes":[{"value":"/ Reference wrapper that implement encode like any type that is encoded like its inner type.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107299,"byte_end":107393,"line_start":75,"line_end":75,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107394,"byte_end":107397,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107398,"byte_end":107411,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107412,"byte_end":107415,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107416,"byte_end":107427,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ # use parity_scale_codec::{EncodeLike, Ref};","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107428,"byte_end":107476,"line_start":80,"line_end":80,"column_start":1,"column_end":49}},{"value":"/ fn foo<T: EncodeLike<u8>>(t: T) -> T {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107477,"byte_end":107519,"line_start":81,"line_end":81,"column_start":1,"column_end":43}},{"value":"/     store_t(Ref::from(&t)); // Store t without moving it, but only using a reference.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107520,"byte_end":107609,"line_start":82,"line_end":82,"column_start":1,"column_end":90}},{"value":"/     t","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107610,"byte_end":107619,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107620,"byte_end":107625,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107626,"byte_end":107629,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ fn store_t<T: EncodeLike<u8>>(t: T) {","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107630,"byte_end":107671,"line_start":86,"line_end":86,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107672,"byte_end":107677,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107678,"byte_end":107685,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2546},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/error.rs","byte_start":111039,"byte_end":111044,"line_start":26,"line_end":26,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":2547},{"krate":0,"index":2548}],"decl_id":null,"docs":" Error type.","sig":null,"attributes":[{"value":"/ Error type.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/error.rs","byte_start":110851,"byte_end":110866,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/error.rs","byte_start":110867,"byte_end":110870,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Descriptive on `std` environment, with chaining error on `chain-error` environment,","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/error.rs","byte_start":110871,"byte_end":110958,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"/ underscriptive otherwise.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/error.rs","byte_start":110959,"byte_end":110988,"line_start":24,"line_end":24,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/error.rs","byte_start":111357,"byte_end":111362,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"name":"chain","qualname":"<Error>::chain","value":"pub fn chain<impl Into<Cow<'static, str>>: Into<Cow>>(Self,\nimpl Into<Cow<'static, str>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Chain error message with description.","sig":null,"attributes":[{"value":"/ Chain error message with description.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/error.rs","byte_start":111184,"byte_end":111225,"line_start":34,"line_end":34,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/error.rs","byte_start":111227,"byte_end":111230,"line_start":35,"line_end":35,"column_start":2,"column_end":5}},{"value":"/ When compiled with `chain-error` feature, the description is chained, otherwise the","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/error.rs","byte_start":111232,"byte_end":111319,"line_start":36,"line_end":36,"column_start":2,"column_end":89}},{"value":"/ description is ditched.","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/error.rs","byte_start":111321,"byte_end":111348,"line_start":37,"line_end":37,"column_start":2,"column_end":29}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":15079,"byte_end":15084,"line_start":120,"line_end":120,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":16334,"byte_end":16342,"line_start":152,"line_end":152,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":16954,"byte_end":16955,"line_start":181,"line_end":181,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":19224,"byte_end":19235,"line_start":263,"line_end":263,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20813,"byte_end":20814,"line_start":311,"line_end":311,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21040,"byte_end":21041,"line_start":316,"line_end":316,"column_start":45,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21264,"byte_end":21265,"line_start":321,"line_end":321,"column_start":44,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21652,"byte_end":21655,"line_start":332,"line_end":332,"column_start":39,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21702,"byte_end":21705,"line_start":333,"line_end":333,"column_start":41,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21746,"byte_end":21749,"line_start":334,"line_end":334,"column_start":35,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21795,"byte_end":21796,"line_start":335,"line_end":335,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21966,"byte_end":21967,"line_start":340,"line_end":340,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22048,"byte_end":22049,"line_start":342,"line_end":342,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22235,"byte_end":22236,"line_start":347,"line_end":347,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22293,"byte_end":22296,"line_start":349,"line_end":349,"column_start":53,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22361,"byte_end":22364,"line_start":350,"line_end":350,"column_start":55,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22423,"byte_end":22426,"line_start":351,"line_end":351,"column_start":49,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22494,"byte_end":22495,"line_start":352,"line_end":352,"column_start":58,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22641,"byte_end":22644,"line_start":358,"line_end":358,"column_start":40,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22692,"byte_end":22695,"line_start":359,"line_end":359,"column_start":42,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22737,"byte_end":22740,"line_start":360,"line_end":360,"column_start":36,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22787,"byte_end":22788,"line_start":361,"line_end":361,"column_start":41,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22832,"byte_end":22834,"line_start":363,"line_end":363,"column_start":40,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22882,"byte_end":22884,"line_start":364,"line_end":364,"column_start":42,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22926,"byte_end":22928,"line_start":365,"line_end":365,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22974,"byte_end":22975,"line_start":366,"line_end":366,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":23008,"byte_end":23014,"line_start":368,"line_end":368,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":23039,"byte_end":23045,"line_start":369,"line_end":369,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":23076,"byte_end":23082,"line_start":370,"line_end":370,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":23525,"byte_end":23526,"line_start":391,"line_end":391,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":24177,"byte_end":24180,"line_start":419,"line_end":419,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":24284,"byte_end":24287,"line_start":423,"line_end":423,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":24391,"byte_end":24393,"line_start":427,"line_end":427,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":24443,"byte_end":24444,"line_start":431,"line_end":431,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":26038,"byte_end":26044,"line_start":474,"line_end":474,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":26460,"byte_end":26466,"line_start":496,"line_end":496,"column_start":63,"column_end":69},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":26599,"byte_end":26605,"line_start":504,"line_end":504,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":27246,"byte_end":27256,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":27357,"byte_end":27367,"line_start":530,"line_end":530,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":27623,"byte_end":27633,"line_start":544,"line_end":544,"column_start":21,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":27654,"byte_end":27664,"line_start":546,"line_end":546,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":27995,"byte_end":28001,"line_start":557,"line_end":557,"column_start":61,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":28036,"byte_end":28042,"line_start":559,"line_end":559,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":28366,"byte_end":28372,"line_start":578,"line_end":578,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":35437,"byte_end":35440,"line_start":840,"line_end":840,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":35619,"byte_end":35630,"line_start":848,"line_end":848,"column_start":24,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":35657,"byte_end":35668,"line_start":850,"line_end":850,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":35755,"byte_end":35766,"line_start":854,"line_end":854,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":35921,"byte_end":35927,"line_start":861,"line_end":861,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":38914,"byte_end":38917,"line_start":955,"line_end":955,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":38981,"byte_end":38984,"line_start":956,"line_end":956,"column_start":58,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":39046,"byte_end":39049,"line_start":957,"line_end":957,"column_start":56,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":39149,"byte_end":39152,"line_start":960,"line_end":960,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":41078,"byte_end":41086,"line_start":1022,"line_end":1022,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":41148,"byte_end":41156,"line_start":1023,"line_end":1023,"column_start":56,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":41290,"byte_end":41298,"line_start":1025,"line_end":1025,"column_start":58,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":41367,"byte_end":41370,"line_start":1026,"line_end":1026,"column_start":63,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":41405,"byte_end":41413,"line_start":1028,"line_end":1028,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":42343,"byte_end":42351,"line_start":1066,"line_end":1066,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":47453,"byte_end":47461,"line_start":1287,"line_end":1287,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":47690,"byte_end":47698,"line_start":1299,"line_end":1299,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":48081,"byte_end":48089,"line_start":1311,"line_end":1311,"column_start":21,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":48113,"byte_end":48118,"line_start":1313,"line_end":1313,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":48295,"byte_end":48300,"line_start":1326,"line_end":1326,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":48539,"byte_end":48553,"line_start":1337,"line_end":1337,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":48732,"byte_end":48746,"line_start":1350,"line_end":1350,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":63628,"byte_end":63643,"line_start":28,"line_end":28,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":64103,"byte_end":64114,"line_start":52,"line_end":52,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":65022,"byte_end":65029,"line_start":84,"line_end":84,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":65116,"byte_end":65123,"line_start":88,"line_end":88,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":65556,"byte_end":65563,"line_start":104,"line_end":104,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":65632,"byte_end":65639,"line_start":109,"line_end":109,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":66058,"byte_end":66068,"line_start":130,"line_end":130,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":66164,"byte_end":66174,"line_start":136,"line_end":136,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":66656,"byte_end":66663,"line_start":158,"line_end":158,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":67295,"byte_end":67305,"line_start":185,"line_end":185,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":67392,"byte_end":67399,"line_start":189,"line_end":189,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":67578,"byte_end":67585,"line_start":196,"line_end":196,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":67819,"byte_end":67826,"line_start":203,"line_end":203,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":68280,"byte_end":68287,"line_start":215,"line_end":215,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":68409,"byte_end":68410,"line_start":219,"line_end":219,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":68542,"byte_end":68552,"line_start":225,"line_end":225,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":68772,"byte_end":68782,"line_start":238,"line_end":238,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":69240,"byte_end":69247,"line_start":257,"line_end":257,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":69371,"byte_end":69381,"line_start":266,"line_end":266,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":69923,"byte_end":69930,"line_start":286,"line_end":286,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":70091,"byte_end":70101,"line_start":296,"line_end":296,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":70754,"byte_end":70761,"line_start":320,"line_end":320,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":70977,"byte_end":70987,"line_start":331,"line_end":331,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":71992,"byte_end":71999,"line_start":362,"line_end":362,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":72267,"byte_end":72277,"line_start":375,"line_end":375,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":73286,"byte_end":73293,"line_start":406,"line_end":406,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":73560,"byte_end":73567,"line_start":419,"line_end":419,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":74022,"byte_end":74029,"line_start":431,"line_end":431,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":74486,"byte_end":74493,"line_start":449,"line_end":449,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":75193,"byte_end":75200,"line_start":475,"line_end":475,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":76188,"byte_end":76195,"line_start":514,"line_end":514,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":77594,"byte_end":77601,"line_start":569,"line_end":569,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/joiner.rs","byte_start":89083,"byte_end":89084,"line_start":28,"line_end":28,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/keyedvec.rs","byte_start":90188,"byte_end":90189,"line_start":28,"line_end":28,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/decode_all.rs","byte_start":91494,"byte_end":91495,"line_start":29,"line_end":29,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/depth_limit.rs","byte_start":94807,"byte_end":94825,"line_start":40,"line_end":40,"column_start":30,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/depth_limit.rs","byte_start":95406,"byte_end":95407,"line_start":69,"line_end":69,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":99115,"byte_end":99118,"line_start":55,"line_end":55,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":99492,"byte_end":99500,"line_start":71,"line_end":71,"column_start":61,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107831,"byte_end":107834,"line_start":90,"line_end":90,"column_start":60,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107974,"byte_end":107977,"line_start":95,"line_end":95,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":108120,"byte_end":108123,"line_start":100,"line_end":100,"column_start":68,"column_end":71},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":108193,"byte_end":108196,"line_start":101,"line_end":101,"column_start":57,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/error.rs","byte_start":111175,"byte_end":111180,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/error.rs","byte_start":112193,"byte_end":112198,"line_start":73,"line_end":73,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/error.rs","byte_start":112457,"byte_end":112462,"line_start":87,"line_end":87,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/error.rs","byte_start":112725,"byte_end":112730,"line_start":103,"line_end":103,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":15079,"byte_end":15084,"line_start":120,"line_end":120,"column_start":31,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2546},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":16334,"byte_end":16342,"line_start":152,"line_end":152,"column_start":34,"column_end":42},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":172},"to":{"krate":0,"index":159}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":16954,"byte_end":16955,"line_start":181,"line_end":181,"column_start":36,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":184},"to":{"krate":0,"index":180}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":19224,"byte_end":19235,"line_start":263,"line_end":263,"column_start":17,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":220},"to":{"krate":0,"index":180}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":19732,"byte_end":19737,"line_start":281,"line_end":281,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20759,"byte_end":20765,"line_start":310,"line_end":310,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":227},"to":{"krate":0,"index":235}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20768,"byte_end":20774,"line_start":310,"line_end":310,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":209},"to":{"krate":0,"index":235}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20813,"byte_end":20814,"line_start":311,"line_end":311,"column_start":36,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":237},"to":{"krate":0,"index":235}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20973,"byte_end":20979,"line_start":315,"line_end":315,"column_start":23,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":209},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":20982,"byte_end":20992,"line_start":315,"line_end":315,"column_start":32,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":907},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21040,"byte_end":21041,"line_start":316,"line_end":316,"column_start":45,"column_end":46},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":240},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21198,"byte_end":21204,"line_start":320,"line_end":320,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":227},"to":{"krate":0,"index":241}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21207,"byte_end":21217,"line_start":320,"line_end":320,"column_start":31,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":238},"to":{"krate":0,"index":241}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21264,"byte_end":21265,"line_start":321,"line_end":321,"column_start":44,"column_end":45},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":243},"to":{"krate":0,"index":241}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21604,"byte_end":21609,"line_start":330,"line_end":330,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3242},"to":{"krate":0,"index":244}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21652,"byte_end":21655,"line_start":332,"line_end":332,"column_start":39,"column_end":42},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":244}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21702,"byte_end":21705,"line_start":333,"line_end":333,"column_start":41,"column_end":44},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21746,"byte_end":21749,"line_start":334,"line_end":334,"column_start":35,"column_end":38},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21795,"byte_end":21796,"line_start":335,"line_end":335,"column_start":40,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":252},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":21966,"byte_end":21967,"line_start":340,"line_end":340,"column_start":36,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":260},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22048,"byte_end":22049,"line_start":342,"line_end":342,"column_start":37,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":264},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22235,"byte_end":22236,"line_start":347,"line_end":347,"column_start":40,"column_end":41},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":272},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22293,"byte_end":22296,"line_start":349,"line_end":349,"column_start":53,"column_end":56},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":672},"to":{"krate":0,"index":244}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22361,"byte_end":22364,"line_start":350,"line_end":350,"column_start":55,"column_end":58},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":672},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22423,"byte_end":22426,"line_start":351,"line_end":351,"column_start":49,"column_end":52},"kind":{"Impl":{"id":16}},"from":{"krate":5,"index":672},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22494,"byte_end":22495,"line_start":352,"line_end":352,"column_start":58,"column_end":59},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":284},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22641,"byte_end":22644,"line_start":358,"line_end":358,"column_start":40,"column_end":43},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":5986},"to":{"krate":0,"index":244}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22692,"byte_end":22695,"line_start":359,"line_end":359,"column_start":42,"column_end":45},"kind":{"Impl":{"id":19}},"from":{"krate":5,"index":5986},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22737,"byte_end":22740,"line_start":360,"line_end":360,"column_start":36,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":5,"index":5986},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22787,"byte_end":22788,"line_start":361,"line_end":361,"column_start":41,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":294},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22832,"byte_end":22834,"line_start":363,"line_end":363,"column_start":40,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":5,"index":4665},"to":{"krate":0,"index":244}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22882,"byte_end":22884,"line_start":364,"line_end":364,"column_start":42,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":4665},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22926,"byte_end":22928,"line_start":365,"line_end":365,"column_start":36,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":5,"index":4665},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":22974,"byte_end":22975,"line_start":366,"line_end":366,"column_start":40,"column_end":41},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":302},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":23008,"byte_end":23014,"line_start":368,"line_end":368,"column_start":29,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":244}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":23039,"byte_end":23045,"line_start":369,"line_end":369,"column_start":22,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":23076,"byte_end":23082,"line_start":370,"line_end":370,"column_start":28,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":23525,"byte_end":23526,"line_start":391,"line_end":391,"column_start":23,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":309},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":24089,"byte_end":24094,"line_start":415,"line_end":415,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":317}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":24177,"byte_end":24180,"line_start":419,"line_end":419,"column_start":31,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":317}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":24284,"byte_end":24287,"line_start":423,"line_end":423,"column_start":31,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":5,"index":5986},"to":{"krate":0,"index":317}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":24391,"byte_end":24393,"line_start":427,"line_end":427,"column_start":31,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":5,"index":4665},"to":{"krate":0,"index":317}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":24443,"byte_end":24444,"line_start":431,"line_end":431,"column_start":23,"column_end":24},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":330},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":26038,"byte_end":26044,"line_start":474,"line_end":474,"column_start":39,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":2,"index":46101},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":26460,"byte_end":26466,"line_start":496,"line_end":496,"column_start":63,"column_end":69},"kind":{"Impl":{"id":35}},"from":{"krate":2,"index":46101},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":26599,"byte_end":26605,"line_start":504,"line_end":504,"column_start":39,"column_end":45},"kind":{"Impl":{"id":36}},"from":{"krate":2,"index":46101},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":27246,"byte_end":27256,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1038},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":27357,"byte_end":27367,"line_start":530,"line_end":530,"column_start":17,"column_end":27},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1038},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":27623,"byte_end":27633,"line_start":544,"line_end":544,"column_start":21,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1038},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":27654,"byte_end":27664,"line_start":546,"line_end":546,"column_start":17,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1038},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":27995,"byte_end":28001,"line_start":557,"line_end":557,"column_start":61,"column_end":67},"kind":{"Impl":{"id":41}},"from":{"krate":2,"index":45974},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":28036,"byte_end":28042,"line_start":559,"line_end":559,"column_start":28,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":2,"index":45974},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":28366,"byte_end":28372,"line_start":578,"line_end":578,"column_start":28,"column_end":34},"kind":{"Impl":{"id":43}},"from":{"krate":2,"index":45974},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":35437,"byte_end":35440,"line_start":840,"line_end":840,"column_start":42,"column_end":45},"kind":{"Impl":{"id":65}},"from":{"krate":5,"index":672},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":35619,"byte_end":35630,"line_start":848,"line_end":848,"column_start":24,"column_end":35},"kind":{"Impl":{"id":66}},"from":{"krate":2,"index":3042},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":35657,"byte_end":35668,"line_start":850,"line_end":850,"column_start":20,"column_end":31},"kind":{"Impl":{"id":67}},"from":{"krate":2,"index":3042},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":35755,"byte_end":35766,"line_start":854,"line_end":854,"column_start":20,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":2,"index":3042},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":35921,"byte_end":35927,"line_start":861,"line_end":861,"column_start":17,"column_end":23},"kind":{"Impl":{"id":69}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":38914,"byte_end":38917,"line_start":955,"line_end":955,"column_start":31,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":244}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":38981,"byte_end":38984,"line_start":956,"line_end":956,"column_start":58,"column_end":61},"kind":{"Impl":{"id":71}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":39046,"byte_end":39049,"line_start":957,"line_end":957,"column_start":56,"column_end":59},"kind":{"Impl":{"id":72}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":39149,"byte_end":39152,"line_start":960,"line_end":960,"column_start":28,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":41078,"byte_end":41086,"line_start":1022,"line_end":1022,"column_start":32,"column_end":40},"kind":{"Impl":{"id":74}},"from":{"krate":5,"index":4173},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":41148,"byte_end":41156,"line_start":1023,"line_end":1023,"column_start":56,"column_end":64},"kind":{"Impl":{"id":75}},"from":{"krate":5,"index":4173},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":41290,"byte_end":41298,"line_start":1025,"line_end":1025,"column_start":58,"column_end":66},"kind":{"Impl":{"id":76}},"from":{"krate":5,"index":4173},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":41367,"byte_end":41370,"line_start":1026,"line_end":1026,"column_start":63,"column_end":66},"kind":{"Impl":{"id":77}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":41405,"byte_end":41413,"line_start":1028,"line_end":1028,"column_start":28,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":5,"index":4173},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":42343,"byte_end":42351,"line_start":1066,"line_end":1066,"column_start":28,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":5,"index":4173},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":47453,"byte_end":47461,"line_start":1287,"line_end":1287,"column_start":17,"column_end":25},"kind":{"Impl":{"id":113}},"from":{"krate":2,"index":48587},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":47690,"byte_end":47698,"line_start":1299,"line_end":1299,"column_start":17,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":2,"index":48587},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":48081,"byte_end":48089,"line_start":1311,"line_end":1311,"column_start":21,"column_end":29},"kind":{"Impl":{"id":115}},"from":{"krate":2,"index":48587},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":48113,"byte_end":48118,"line_start":1313,"line_end":1313,"column_start":20,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":2,"index":44475},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":48295,"byte_end":48300,"line_start":1326,"line_end":1326,"column_start":20,"column_end":25},"kind":{"Impl":{"id":117}},"from":{"krate":2,"index":44475},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":48539,"byte_end":48553,"line_start":1337,"line_end":1337,"column_start":20,"column_end":34},"kind":{"Impl":{"id":118}},"from":{"krate":2,"index":44544},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/codec.rs","byte_start":48732,"byte_end":48746,"line_start":1350,"line_end":1350,"column_start":20,"column_end":34},"kind":{"Impl":{"id":119}},"from":{"krate":2,"index":44544},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":63628,"byte_end":63643,"line_start":28,"line_end":28,"column_start":33,"column_end":48},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":586},"to":{"krate":0,"index":180}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":64103,"byte_end":64114,"line_start":52,"line_end":52,"column_start":35,"column_end":46},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":594},"to":{"krate":0,"index":159}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":65022,"byte_end":65029,"line_start":84,"line_end":84,"column_start":21,"column_end":28},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2481},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":65116,"byte_end":65123,"line_start":88,"line_end":88,"column_start":35,"column_end":42},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2481},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":65250,"byte_end":65254,"line_start":93,"line_end":93,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2930},"to":{"krate":0,"index":614}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":65556,"byte_end":65563,"line_start":104,"line_end":104,"column_start":24,"column_end":31},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2481},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":65632,"byte_end":65639,"line_start":109,"line_end":109,"column_start":20,"column_end":27},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2481},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":66058,"byte_end":66068,"line_start":130,"line_end":130,"column_start":28,"column_end":38},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":66164,"byte_end":66174,"line_start":136,"line_end":136,"column_start":24,"column_end":34},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":66656,"byte_end":66663,"line_start":158,"line_end":158,"column_start":20,"column_end":27},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2481},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":67295,"byte_end":67305,"line_start":185,"line_end":185,"column_start":29,"column_end":39},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2519},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":67392,"byte_end":67399,"line_start":189,"line_end":189,"column_start":30,"column_end":37},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2481},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":67578,"byte_end":67585,"line_start":196,"line_end":196,"column_start":30,"column_end":37},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2481},"to":{"krate":23,"index":2101}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":67819,"byte_end":67826,"line_start":203,"line_end":203,"column_start":42,"column_end":49},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2481},"to":{"krate":23,"index":1560}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":68117,"byte_end":68122,"line_start":210,"line_end":210,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":667}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":68280,"byte_end":68287,"line_start":215,"line_end":215,"column_start":40,"column_end":47},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2481},"to":{"krate":0,"index":334}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":68409,"byte_end":68410,"line_start":219,"line_end":219,"column_start":33,"column_end":34},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":675},"to":{"krate":0,"index":667}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":68542,"byte_end":68552,"line_start":225,"line_end":225,"column_start":21,"column_end":31},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":68772,"byte_end":68782,"line_start":238,"line_end":238,"column_start":21,"column_end":31},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":69240,"byte_end":69247,"line_start":257,"line_end":257,"column_start":25,"column_end":32},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2481},"to":{"krate":0,"index":604}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":69371,"byte_end":69381,"line_start":266,"line_end":266,"column_start":21,"column_end":31},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":69923,"byte_end":69930,"line_start":286,"line_end":286,"column_start":26,"column_end":33},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2481},"to":{"krate":0,"index":604}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":70091,"byte_end":70101,"line_start":296,"line_end":296,"column_start":21,"column_end":31},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":70754,"byte_end":70761,"line_start":320,"line_end":320,"column_start":26,"column_end":33},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2481},"to":{"krate":0,"index":604}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":70977,"byte_end":70987,"line_start":331,"line_end":331,"column_start":21,"column_end":31},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":71992,"byte_end":71999,"line_start":362,"line_end":362,"column_start":26,"column_end":33},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2481},"to":{"krate":0,"index":604}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":72267,"byte_end":72277,"line_start":375,"line_end":375,"column_start":21,"column_end":31},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":73286,"byte_end":73293,"line_start":406,"line_end":406,"column_start":27,"column_end":34},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2481},"to":{"krate":0,"index":604}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":73560,"byte_end":73567,"line_start":419,"line_end":419,"column_start":17,"column_end":24},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2481},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":74022,"byte_end":74029,"line_start":431,"line_end":431,"column_start":17,"column_end":24},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2481},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":74486,"byte_end":74493,"line_start":449,"line_end":449,"column_start":17,"column_end":24},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2481},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":75193,"byte_end":75200,"line_start":475,"line_end":475,"column_start":17,"column_end":24},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2481},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":76188,"byte_end":76195,"line_start":514,"line_end":514,"column_start":17,"column_end":24},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2481},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/compact.rs","byte_start":77594,"byte_end":77601,"line_start":569,"line_end":569,"column_start":17,"column_end":24},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2481},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/joiner.rs","byte_start":89083,"byte_end":89084,"line_start":28,"line_end":28,"column_start":20,"column_end":21},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":775},"to":{"krate":0,"index":771}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/keyedvec.rs","byte_start":90188,"byte_end":90189,"line_start":28,"line_end":28,"column_start":29,"column_end":30},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":793},"to":{"krate":0,"index":790}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/decode_all.rs","byte_start":91274,"byte_end":91279,"line_start":22,"line_end":22,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":805}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/decode_all.rs","byte_start":91494,"byte_end":91495,"line_start":29,"line_end":29,"column_start":31,"column_end":32},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":808},"to":{"krate":0,"index":805}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/depth_limit.rs","byte_start":94197,"byte_end":94202,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":822}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/depth_limit.rs","byte_start":94807,"byte_end":94825,"line_start":40,"line_end":40,"column_start":30,"column_end":48},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":826},"to":{"krate":0,"index":159}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/depth_limit.rs","byte_start":95406,"byte_end":95407,"line_start":69,"line_end":69,"column_start":33,"column_end":34},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":841},"to":{"krate":0,"index":822}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":99115,"byte_end":99118,"line_start":55,"line_end":55,"column_start":34,"column_end":37},"kind":{"Impl":{"id":162}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":876}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_append.rs","byte_start":99492,"byte_end":99500,"line_start":71,"line_end":71,"column_start":61,"column_end":69},"kind":{"Impl":{"id":163}},"from":{"krate":5,"index":4173},"to":{"krate":0,"index":876}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107280,"byte_end":107285,"line_start":73,"line_end":73,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107288,"byte_end":107294,"line_start":73,"line_end":73,"column_start":49,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":209},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107831,"byte_end":107834,"line_start":90,"line_end":90,"column_start":60,"column_end":63},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":909},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":107974,"byte_end":107977,"line_start":95,"line_end":95,"column_start":55,"column_end":58},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":909},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":108120,"byte_end":108123,"line_start":100,"line_end":100,"column_start":68,"column_end":71},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":909},"to":{"krate":0,"index":244}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/encode_like.rs","byte_start":108193,"byte_end":108196,"line_start":101,"line_end":101,"column_start":57,"column_end":60},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":909},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/error.rs","byte_start":111175,"byte_end":111180,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/error.rs","byte_start":112193,"byte_end":112198,"line_start":73,"line_end":73,"column_start":29,"column_end":34},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2546},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/error.rs","byte_start":112457,"byte_end":112462,"line_start":87,"line_end":87,"column_start":29,"column_end":34},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2546},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-3.1.2/src/error.rs","byte_start":112725,"byte_end":112730,"line_start":103,"line_end":103,"column_start":28,"column_end":33},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2546},"to":{"krate":1,"index":2452}}]}